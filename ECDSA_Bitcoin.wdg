#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : ECDSA_Bitcoin
 major_version : 25
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1c1898d20234a45d
 internal_properties : BQAAAAUAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1+
      privé
      // classe de gestion de ECDSA sur laquelle on rebondit.
      // Singleton initialisé au 1er appel.
      m_gpclEDCSA est ECDSA_BTC dynamique
     type : 720896
   -
     code : |1-
      
     type : 720898
  procedures :
   -
     name : _InitSi1ErAppel
     procedure_id : 2024536515517170488
     type_code : 15
     code : |1+
      Procédure privée _InitSi1ErAppel()
      
      si m_gpclEDCSA = null ALORS
      	m_gpclEDCSA = allouer un ECDSA_BTC
      FIN
     type : 458752
   -
     name : créePaireCléPrivéePublique
     procedure_id : 2182374738330719052
     type_code : 15
     code : |1+
      // crée une nouvelle paire de clé : ( clé privée, clé publique )
      PROCÉDURE CréePaireCléPrivéePublique() : ( Entier256, Point256 )
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      // rebond 
      renvoyer m_gpclEDCSA.CréePaireCléPrivéePublique()
      
     type : 458752
   -
     name : signeBuffer
     procedure_id : 2182375661748771995
     type_code : 15
     code : |1+
      // signe le buffer <chaineASigner> avec la a clé privée <CléPrivée>
      PROCÉDURE signeBuffer( chaineASigner buffer, cléPrivée Entier256 ) : SignatureEcdsa
      _InitSi1ErAppel()
      // rebond 
      RENVOYER m_gpclEDCSA.SigneBuffer(chaineASigner, cléPrivée)
     type : 458752
   -
     name : vérifieSignatureBuffer
     procedure_id : 2182373316695819969
     type_code : 15
     code : |1-
      // vérifie la signature 
      // renvoie ( signature OK, Message si erreur )
      PROCÉDURE vérifieSignatureBuffer( chaineSignée est buffer , CléPublique Point256, signature SignatureEcdsa  ) : (booléen, chaine )
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      // rebond 
      RENVOYER m_gpclEDCSA.vérifieSignatureBuffer( chaineSignée, CléPublique, signature  )
     type : 458752
   -
     name : dériveCléPubliqueDepuisCléPrivée
     procedure_id : 2024536833344824486
     type_code : 15
     code : |1+
      // renvoie la clé publique qui correspond a <cléPrivée>
      // utile pour créer un paire de clé a partir de méthodes plus complexes ou pour l'importation
      procédure dériveCléPubliqueDepuisCléPrivée( cléPrivée est Entier256 ) : Point256
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      // rebond
      renvoyer m_gpclEDCSA.DériveCléPubliqueDepuisCléPrivée(cléPrivée)
      
     type : 458752
   -
     name : SigneNombre
     procedure_id : 2024537215597002752
     type_code : 15
     code : |1+
      // signer une nombre avec une clé privée.
      procédure SigneNombre( NombreASigner Entier256, cléPrivée Entier256 ) : signatureEcdsa
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      // rebond
      RENVOYER m_gpclEDCSA.SigneNombre(NombreASigner, cléPrivée)
      
     type : 458752
   -
     name : VerifieSignatureNombre
     procedure_id : 2024539397447712176
     type_code : 15
     code : |1+
      // vérifie que <signature> est bien la signature de <Nombre> avec un clé correspondant a <CléPublique>
      // renvoie (OK, détailErreurSiEchec)
      procédure VerifieSignatureNombre( NombreASigner Entier256, CléPublique Point256, signature SignatureEcdsa ) : (booléen, chaine)
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      // rebond
      détailErreurSiEchec_OUT est chaîne
      signatureOK est un booléen 
      (signatureOK,détailErreurSiEchec_OUT ) =  m_gpclEDCSA.VerifieSignatureNombre( NombreASigner , CléPublique , signature   ) 
      renvoyer (signatureOK, détailErreurSiEchec_OUT)
     type : 458752
   -
     name : clépubliqueEstValide
     procedure_id : 2026423646811722825
     type_code : 15
     code : |1+
      // indique si une clé publique semble valide
      procédure clépubliqueEstValide( CléPublique Point256 ) : booléen
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      
      // OK ssi le point est sur la courbe
      renvoyer m_gpclEDCSA.courbeBtc.pointEstSurLaCourbe(CléPublique)
     type : 458752
   -
     name : additionCléPrivé
     procedure_id : 2149965950342088235
     type_code : 15
     code : |1+
      // renvoie une clé prive addition de 2 autres clés privées.
      // pour construction clés hiérarchiques
      procédure additionCléPrivé( cle1 Entier256, clé2 entier256 ) : entier256
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      
      renvoyer m_gpclEDCSA.corpsOrdre.additionModulo(cle1 , clé2)
     type : 458752
   -
     name : additionCléPlublique
     procedure_id : 2186679699968239044
     type_code : 15
     code : |1+
      // renvoie une clé publique addition de 2 autres clés publiques
      // pour construction clés hiérarchiques
      procédure additionCléPlublique( cléPublique1 Point256, cléPublique2 Point256 ) : Point256
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      
      renvoyer m_gpclEDCSA.courbeBtc.pointPlusPoint(cléPublique1, cléPublique2)
      
      
     type : 458752
   -
     name : xVersCléPublique
     procedure_id : 2187088357497435729
     type_code : 15
     code : |1+
      // calcule une clé  publique complète a partir de juste la coordonée X
      // (pour les clé compressées )
      PROCÉDURE xVersCléPublique( X entier256,  bYPositif est un booléen  ) : Point256
      // init de m_gpclEDCSA si c'est 1er appel de l'API
      _InitSi1ErAppel()
      
      RENVOYER m_gpclEDCSA.courbeBtc.xVersCléPublique(X, bYPositif)
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BQAAAAUAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : ProcéduresGlobales1
resources :
 string_res :
  identifier : 0x1c1898b60232369f
  internal_properties : BQAAAAUAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BQAAAAUAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
