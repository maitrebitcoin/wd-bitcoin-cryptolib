#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : Test_PGCD
 major_version : 25
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : Test_PGCD
 identifier : 0x2baf219b017775c3
 internal_properties : BQAAAAUAAAC/sepIjirQ9yeo4TuEKRunewDnNsRZJG67Cicuf4bvCP5S+WDN29dMrdkYgTRkKwicPzVpG3C5TPfKH8hiYMQuIo0Ilaq9VHo3ayp4uNrO1wd+22zW0+qKYc5iepj1E6+i8+Z1Ue9OAGWrJIBdUDmrLA/7bxRU7QdjWlmrvUq8bvvuZEbL5GNEY9dQTJKunXx389gwLq37v4v8DXt6ubyc5l5Va4odfk/qrq7FLWs9BRlpac/ShB3K3WYwrOwfvl9sGjzYkO27O4oSKRknoinsCCYzF5QsV7zro0+2BIkWIQL/97VjihJGFOQP2wkuZqyrcKbA8pJEw1b1NsHWS3OwLj9nscNhqDlCcHskLlPVmRTcMk4DiqcQ4459QoirWbu+44REYC2KFCUk7HHCXlr7McluP7lJ4z0SwEwxSfatqjWdn9aZgsNiDN7goI5piGTHg//corDnHkHBnnqMHUXr4M+vmUOHD5yrdWcUE9QfwtdfLlq3TlOJEPorVxRsh6W13RGoeTnvY4/WiGIhIF3YkoXBRf0d//eJCUsWSr00Q0WtYzof2Kn1HpDhv2Xi03M+o4xpAuh40WrJXuiYxU7JexS98s2Z+r/gFJywhNpL0f11KvcxGa1BooKVU50rXmkNpJG6Esud5iiIL74CcM0YMgap6MKLZVTTjS2WMt8GOFfyEo1F/Z7yjMqLH6LBv9Xg/ClchwIz8gRNaObo99zpp6oEk8uxHV5lzBlOFFJKzCRjLM93PaRgH7UbgWWK89ejZq4s+n/8wH38pIkQN/BgKwsRSRdx7kbIJK1jwLLrcKzRJvACxbRyKG2VKJt5V+xdUOewkkUDrRqqhdaaeV+URN7f+RgjtXCQw6nNevRHmphhUNVGaz2AkOdVvopaV2q+/w6SR2q4053c4lpM2XDbwpI6oRKuyf/q7aHaOvLgnhpSn998lsiGwYHtN6yp6KgIA5UYbb6oOq/JLMVs0c7R5wfUaD04rnVgDS59Z33K8b1nL6z4Ga6bjjT+wCQ=
 controls :
  -
    name : Table1
    identifier : 0x2baf21c601ef1ec5
    internal_properties : BQAAAAUAAACrmujiiUfcb0kAhpSn4MFEnWLefWrEc8PaE95px52jfe21oLOOh9rj5+ozHYZp0OLEe6lRD0gs/gUPa3EImm/zWdxE2u1f7jg5irtC3B1xl1XqhAcJOfQIGZ5HdjsAVJlgXnyHLqB6Hc5FIuWVp9p7/oIaHQ1AAHAWiqveZvpPl6OOkmSj3879GmL1ZZEw2PGxxc3BZ11csepHzNoKwiJ09SqlRFhIODDvIuAB/2zOl+QeudPB4Fx3Cc2MxKr083RTPsfJT+5Ffz6NiVCKhZaRtjVorcVs39T3VZq2b8UNjxuSivh12Ak+QDr1b+l13oEW18/EoHS29C/7/DDxJFrjBry3l8ggVAhRU0aCaJ9W4EgZcSczCZcLJfs8XjcaapHserS2dCUoWBZu/4/7Qt9RhmVDwT+7yySOB4UYYULByz3wDYbDOoOpYWHPaVnxOEHRTZ0hGt9rIQE8tCsy3XTyuImCoLOgqQ4QLvhPa2LoLcFiOtT+8zloHVlDvgaCiMFY0Ko81L7/pUumRqT0qst89NSofCsIK7D/B87+qZgFP1Op1ce0fzcQznM4gw/hiz5+RMGvWnKGljXLkei45ZrOCr8+GYkOvufeIoFlrvaJLOXflaUFmQF8xEenBhXbi5iwp4eTc/Ojw2bnz+f1MsUKzxGs93QmIwS446lj/pfZcK3BduTyGXNCp8LLwBOKKUxlW0DaSgYA/KuRHMJfFTWQiH00riMqYEq+ZDstxgR8crE6DeTTsikCB6QXjOInkDpq0sth+p+4i75adyrB62b7xFH6NKgpR1dXRR8BUf8srO/t4oDbWiKxcN7rwuKshrxRFjCyV9gGLzKK+/yP49vmkL5d9FSknRLiJm2oqbei78O4pkldyC2dWLO7arLrdwTObRmeqBr5yUXHzedbOxFKnrIhJulcxdGNcaretRNUB9OuB7K5lJrfuthFTYWDFj6OSuUOF7UC7Z/YWa5wfJhf2E5l47FKp/C+b88UQEdRwo65Ceho85qKQdW4NL+fsoVCF3qGlgU1oH7d1rlTtB5AEWlDKLhlg2CtIoQ7dMd98t8sPANvCujnOqGxHDR4P58vxtg87Zer9b5KCRt/B/+C4iAaAcYhq720wd/ffK1NnYqk8HWL4PGdM7NU1/2/i8ggvkg9Xnin6DSUK224dutTvbuUIQYW7TPShxopqX9t+UbtBpAyQ1XhN/X8DjCFecezZSbsES9kll1l8FV8429WyoXkq9cVqQTvmXGm+RhHWq6N1Br6uN0qft7Xe5ubSfmjLSZy1TvplmfIq4sB2dTNoVNO9C0q6+wZJHBlEFriM7MmFLBhBcNMKmp8UZUBVinU7RpFw+k5PnNZn+qAA6lkkFkg+h+8mg0fklCmdUOyfEfacudXxdTTYQehpGr6cqRyOF/l4P5roDx+Rz3ZsnCOcB2vKV6fYIEo++rgtyrOnJRW9MT3wYy3AVFtxfuv9zRpF1eWHpbiZ411ihT49Nyei//OKzSZOIuG5cCJGvTb/KDXZP2xkXouqASVg3tuBKAc8EzB3+1vGsKX+IdLI1qLx/qeCpk0VCeP0FDFP0n4u7J5+all+LkeprBjwyl+Xb2NEnkL9Vfs3PRlkR0Y4OJ0db2e+vNRShOnUbIhzr4BoQyZPChalmLkX1R8D/VHCPXkl0lgrI73DfRcF1hSRuwYkLcy8TD0WEkqgda14IQtvBsjiYihVvr6Gdc2b/ey3sg0UH/N/oZUxEamtGhoVymVIQqNT/m8WV0YAKDsHj+mF2OXnhWPzdYDU9eCDTmhmF35/+VINWRiuXz+rT6sk30Zkn0C3oEMbqmp+H9oYu5DVyjmc+RzDHfVZ+3yeUCFyI8OyRX/TGiauoEjtJsnUOfMw8pTI+KRdF/+FtKOezmv0khqWewFEJA+M/4QpfTCcuVjR/+NOeS1imylnBodd8hT5pAkeS5ZdoKvB6lEqgtMOpmucrMRfFkTkFIP3jYyA6xbGSTHfGS+9ROuf0iEsyrgJDLP/beKSNumDyTpw/SuIYy8UKhSruAs/0C0esFopfgeN27apgtUG9HeQVy5Ps6f5IlP3p8gvQClShMeey0JOKQ+a3i1i7dyEHVFTl8LZk9u0ickZr3CY+8ufWnX5525fSqoCpY3nL9qOL+yZjARVku7cAl27F/HvnxKr/MklOXGKWkUBjh0lB0wrIqCYuovYCUa9XlRwf09awVsBp5bmDHvsHC4xmKcfrOfKpCpL0lWFQpA+j6Njw8SZ1DzuKIlOVH9bPe++Vndu7iHcYcf9zNtXoPfrszw3n5C+A3CYgvrFsdSO1sXV+vDH17Cx19lpqcm4iZ75cFauJEUwsOQKhgEWHpLOlxcbO3ai1HT7n512jNXWqYIWg9PDdrkoTxSN/6XE3g19DQYbyUYYBPGJlUvOpYVfT7C3fJ3z1+gPzuEJpo/dxjASW+iVDGCZjQahUtWGk8NZ52/x9/8FOJKt/J1IQ5MOU06Td2ODnuXaC4N0UL1PfONBQ8x7x+Fbn1LgesLUOI1qOZgf8IpmpAqUuQTWVCSx/+3GVYhGsd8C+fOWRwy3JHDHBDoW5eUSo3WLcTtmL/flCc/cERsv1MClvtQPCCnuEAzk8wJKoFr5WVHqMOuPiuUPGc6OyMHTrS07+75JuGyTSuiULpJF2DZR8sD4dUx8ejJ2IETa9j3NVPNomLygIQNKw89nQe7Oq98bCgtY4a/yE7yd9uq5Eloq6wmhzGA3Lx5OkO3h+xj/6SWaR3b6nEQMwHxROrDZBLV4P9Xy5MOqhdvR/GNYZjDbPHK+3ct4UcucmHF9uUDeEi/AWLo8lD5FVuIEkuimsTPrmjFaUQFhInEa+acxuRd1z4LtZaSvv+OuacUX0uOQLCxCXImWEE7Nln/WjZ5zXRTP7tEJjCR/ldhVlY506AgQIvQHGgc0w2fq3LedyMb8t5HlaKnQsXE5CDhrBp6goHz5WMm6y/N6Ug607VLWsOGvXB+KofhUxXKNgZqcZFdKFaugvgreANb5aHr1VOy+MoYPRN62ZC/XVam0xWiAS0S7JHpB5hhiQ+jhbmkmIneXHatfEuMb5dZlJOiKvAaMXKnr2fEfonRpW8VUgbhu4FjJdWagGli2lJ011okHpFSmXzRIrVXjHMdjFUpRbrPDVw8kLW4Wbu4uyGMUeDD5lxUJ094t7Y8qXFGf2uY78aZ10c5vaxT4jX4KfaP3DAaL8vkGdGVUwaBxtib7KtJryhgnWkfdj7My7DSwY088KTjydVXx+1hVxWNTV4ESydh97KdkDAfSWaEEzbIOhj0p+WJen6D5qyrDn3/ELrZyp421icPALuAYLYhJhOJEJOd8cupQYU8+BrKU1xPeRVhuPLWQdJEIz1+o3Kk5fbbnrj+HqUi+F3+yTzXkQYOm3ZILLdi/AQETnzxS4+otiFdvD7mc8U+FcssPZW9TiS4co5mQTGWkrg7JWzAZOb6dzYW9x/RPz2SdjEMjTzp0T/bavbaOwPKDobKufkie2WNXkNKTYJwQehEo/SNeXmr2g4arGYobmUr8XEG74/vwG3nc/erpc/Ha/9vfUH+dC1qVyS2Ulgw7dpK7F4Rl+ANo+mORx8EgHy39HnT/5W4PybgnNBitH5WcpziiVfO3wLRPEDJMjT0IaXi2B01k0j/G8RKp2RWYleczuzfn2mGimSoZCmTV4//MkSh3jyYkxfpbGfO8F/acI+rsI1G+wNQTSUIxquM1vDnS175O8UBql4+22S1AtJLXpgW1yJevwMpoB+YEtcdNU+1Mut+0fdWFfgPp7zyH0zaWOZqLQmPlqwKTQrDs57NMv6o0TUb/kntmpqQhm317JmyLZ65wNpuAXFkcnACPjRFTCH1HlyUw5qUiqyhjajVm/pY7bGGT49RemobkBiEi2bgk0fPVUz2LPRqavAr10L97/vKGSDSkLPV469Qc14Md4e4+p2pKrBmEk3Epc/q5HqOxwfUbcFpRjW/g+HqDgqQ0fIBryfQqs3P23slssxGFLD6HsOFhkFu36pB3MGR66+eOXq0vnMP2g7xL8Jp9ORBd0AbUrqJ/2HbbgGWcC+VmKROm+1REvHqc4QYPy6XDqQBfiU5MqshTmeR9mYiz1WkEIRxJtyP2+zowz0rarkeQf291PljH1y+vKEYCE8/DxIZshcKgtFY9iz5bsFlQ1Tr+RHGQLeLWeDeaZR/1Tvj56couQwfqjswWGHh0ZwKJ+FPYwXTajDw6zMD4pRZzQ+v9s944UeCb+GOscWB9YpkXxqq4yJEf2AFn91/FVFmPt4eUiOPXRu7P3JkIyLD71YjYW3ItZo0Hw8fVLtkQrNLPcfb2ngEsUzR6e+xcnDTuwP30yqANJvOYwdHeDS41/xVGNtT5WbU7ajhLijLotaOVL0zQPSx4jETMr6o4pw+ZDbfzBzG7xMgUmKKtQLQq0HXxSPtzEZfdBOcgS33OHoKYf9Jwgh+Bts9lkT7Mvh6Ue0Lg9EqQBjbzWXsh83nk6ie6vp/4DHnbfq8pkeXUo2F56TSAk2R9Uz4+9T4m/xWVBcc+0Z4awkebV1/fQtg3GkauKoZLHW5dl9B5BFGFN1AYkPSI9AZcS8GpEeuuaOsoBu7joSIhsMraENjjHvAa+/k2UnzyWa3SEZjLSQgAjm3HGEQIYTi0wV7JtHYkdvH7nZw0BRDy/kpDtvZRqq1uc/XzgjHGMleJBHQFmxaG33PJN7QjlsCyj39Dj2TcONbuolilsIQ0XO487jkr+cBrcYbQlYna4lhKSImsiYTkfCsEXP8kCk5bQiR5QySCaNEWG5Pv/K2JQNm+VDmss6XdRbo8rtLwwamDBLmm1MwUW4VwGLNX/EPl9IJ4hMJTtOg4X2gyyeObLeRXRTMkshM33EONw3xU8yizi4A+qyuHsoPzcgCGrTPVxcZs7fuhx8ajhq9OdJSiDwqrEMmLRExncP+Pp4PlhPUh+Vrnczr7zHphM3AVRdeBu8QI5kjcATe+ERjfKa0GAtFYw8kX0G3YFozwY0RV07NOLuMZrR0errCRbi5f26NJ/auLUfKgb1/EpyJVSbL2uI06ELL7bc9K2HQqs90q+X7hSb63r+KHNeTNXT6EFSX2Awnwkb0mMtdOhvw68w74FFLil7Xr7+dqk87kFrbPBGCOlUO3QnG2caMc62B9Qb/fy1t13bblxsUUX2XruOlM2Jgc00vRFG3RR33UkcWOYpX/4Nl/rOPBk0qcLQcX2T/EG1cluGpgALrzYuvBIja/30Yj2YphRZ2LfXYUBL08X8YZLDoD3SdzmpZsHOfMhVnWPXzHbMX4H3cRqqtzq4C3V8KGaH4HMNGLXAbdby45zJ8fHk2Ile4oWL6K10PICp9KgmfnjDLs7y+6ELp0SmQgenJGKEgntQ=
    columns :
     -
       name : Colonne1
       identifier : 0x2baf21c601f21f03
       internal_properties : BQAAAAUAAABcr7o7Pcm51TkIY733yl6cTQUqE5uHwyefyuzHf8neMaaV3+lcxuS9abdzAf3vblq9gdcwtIFK875B79mkG1Aj5w5h/QeupqQp3tPEGiIYPwwkB4Tc1gx3SDwCsnMIkOyW97kelxY3bRVWX7OEW7pNfuhtEgEkjnKmFfvEhpo3shG+XRo=
       type : 2
       content :
        internal_properties : BQAAAAUAAADbOYF1ESatxicbNMvgrbf0x2jAXpWh0SeKIPV8dhglPWgI+DTUHWhSgRXwF25qxAuMTg97E9gN81gIyAYwWFv95h4R7fYLqlzdy6NT8NdPlEBZt9A6rkdVnwkElziWgY2xwCzeHbUbVfflMahjbekT1rfUPaJrO70noJNTk6f+RdewhMyUnQZdOjFbsuJzlaUg6+JbLES3Nfkg+nNN1ucwlY9m7hdXvGSHm0WQdpQFNz78ZbUMlwnqkjbuRQ0iGBa/+UIEf8a5aedD9zEEQC6tdzBSK4zZUkkFrkdF6IUK6bumihnZiVVOehvjN5Y+MTh98Bwwco0fIIx5H38VoWj7qTQeUdLHj91G2LRZ1iY/DdaTsQB8bGOklWq71wOkCcqz8L5T+FHUb6KGg/tYgBxVKooaMsuj67J0yRvUQ9BTQN5DQ4xp75QxTXdbyWQv7OW+IwsP0BfKZQUWIFvNc5b0pxqglDyclBu3Z/sP6Xu3N/w1BRJ3YLc2sagR8yvE6S7rFmeLe6EKFVdpE6lQKlsC28QPpj3Rhaq2bYXCVDKFTOWnsmsa/sRrkz77lpSwc2pAh2u5idfbWH9Z2wTRJzVly2sT09CGxBEa3jwVCU1c8Z82kJ3cH7rzk+OgUMWaxji5GhyyaLby15G0sE8ZpPuCPAzx2VGlpx8vsrYmRTU3SqgTl6043IvkZlwXhTF1JNvTbqvA5UYNn9E9CfWEM5rwxCVLOcs0BolSRT1s4sK1zFsNSJSNbvVTiZqR0MXEeVzW3XhmHLkOSRx6WenZd6pagAaZ5YddH7VXU/FKXaL0Nw==
        type : 2
       code_elements :
        internal_properties : BQAAAAUAAADTK7Z/Yn6iKoGsa9qDpwA5+/OzIcy6+sYA8HVBcdmHy9OnQSuH3g493hgk8H/+HSxQ309lvagbCA44
        type_code : 3
        p_codes :
         -
           type : 276
           enabled : false
         -
           type : 277
           enabled : false
         -
           type : 278
           enabled : false
     -
       name : Colonne2
       identifier : 0x2baf21c601f41f03
       internal_properties : BQAAAAUAAADaISjJM7m1HZloA51rsvoElfN7G7nyj5P9nScMByeb3t1Hy8G+BIbkvaWX28vNZKg7EwHouE0OPxj7P8P+Ce5BGbSezpavk9PISbgFhY8LzLWNNKWzj7GS15PjMcXeTvbOzfN57QlUMF2dIXNsS2PwGZyTkC9GsNzM990mPIzJwB9M05Q=
       type : 2
       content :
        internal_properties : BQAAAAUAAADbOYF1ESatxicbNMvgrbf0x2jAXpWh0SeKIPV8dhglPWgI+DTUHWhSgRXwF25qxAuMTg97E9gN81gIyAYwWFv95h4R7fYLqlzdy6NT8NdPlEBZt9A6rkdVnwkElziWgY2xwCzeHbUbVfflMahjbekT1rfUPaJrO70noJNTk6f+RdewhMyUnQZdOjFbsuJzlaUg6+JbLES3Nfkg+nNN1ucwlY9m7hdXvGSHm0WQdpQFNz78ZbUMlwnqkjbuRQ0iGBa/+UIEf8a5aedD9zEEQC6tdzBSK4zZUkkFrkdF6IUK6bumihnZiVVOehvjN5Y+MTh98Bwwco0fIIx5H38VoWj7qTQeUdLHj91G2LRZ1iY/DdaTsQB8bGOklWq71wOkCcqz8L5T+FHUb6KGg/tYgBxVKooaMsuj67J0yRvUQ9BTQN5DQ4xp75QxTXdbyWQv7OW+IwsP0BfKZQUWIFvNc5b0pxqglDyclBu3Z/sP6Xu3N/w1BRJ3YLc2sagR8yvE6S7rFmeLe6EKFVdpE6lQKlsC28QPpj3Rhaq2bYXCVDKFTOWnsmsa/sRrkz77lpSwc2pAh2u5idfbWH9Z2wTRJzVly2sT09CGxBEa3jwVCU1c8Z82kJ3cH7rzk+OgUMWaxji5GhyyaLby15G0sE8ZpPuCPAzx2VGlpx8vsrYmRTU3SqgTl6043IvkZlwXhTF1JNvTbqvA5UYNn9E9CfWEM5rwxCVLOcs0BolSRT1s4sK1zFsNSJSNbvVTiZqR0MXEeVzW3XhmHLkOSRx6WenZd6pagAaZ5YddH7VXU/FKXaL0Nw==
        type : 2
       code_elements :
        internal_properties : BQAAAAUAAAD2Rkbx+OjeaV6cz3eLdX7jB0Jgs6WDDXWz15HdSBZm9oeZQ2BKnjRAOa1wH4EQ9d5x
        type_code : 3
        p_codes :
         -
           type : 276
           enabled : false
         -
           type : 277
           enabled : false
         -
           type : 278
           enabled : false
     -
       name : Colonne3
       identifier : 0x2baf21c601f61f13
       internal_properties : BQAAAAUAAAAU13JzhWEB7SHgmwUPQiYUNf1Sm7Pve0838lS/RzH22X7dN8HEXlYlYcfL4XFXil6VYTNgRLGGg16Br7F42zwX/5aLf83w0I43+H1+OMTaHepSOf5KsO5RtraE3AGQCGRuz4HG/+4PRT0Oh0scs+J1BnDlqnmsFvo+fVOsrkKPCsn2BeI=
       type : 2
       content :
        internal_properties : BQAAAAUAAADbOYF1ESatxicbNMvgrbf0x2jAXpWh0SeKIPV8dhglPWgI+DTUHWhSgRXwF25qxAuMTg97E9gN81gIyAYwWFv95h4R7fYLqlzdy6NT8NdPlEBZt9A6rkdVnwkElziWgY2xwCzeHbUbVfflMahjbekT1rfUPaJrO70noJNTk6f+RdewhMyUnQZdOjFbsuJzlaUg6+JbLES3Nfkg+nNN1ucwlY9m7hdXvGSHm0WQdpQFNz78ZbUMlwnqkjbuRQ0iGBa/+UIEf8a5aedD9zEEQC6tdzBSK4zZUkkFrkdF6IUK6bumihnZiVVOehvjN5Y+MTh98Bwwco0fIIx5H38VoWj7qTQeUdLHj91G2LRZ1iY/DdaTsQB8bGOklWq71wOkCcqz8L5T+FHUb6KGg/tYgBxVKooaMsuj67J0yRvUQ9BTQN5DQ4xp75QxTXdbyWQv7OW+IwsP0BfKZQUWIFvNc5b0pxqglDyclBu3Z/sP6Xu3N/w1BRJ3YLc2sagR8yvE6S7rFmeLe6EKFVdpE6lQKlsC28QPpj3Rhaq2bYXCVDKFTOWnsmsa/sRrkz77lpSwc2pAh2u5idfbWH9Z2wTRJzVly2sT09CGxBEa3jwVCU1c8Z82kJ3cH7rzk+OgUMWaxji5GhyyaLby15G0sE8ZpPuCPAzx2VGlpx8vsrYmRTU3SqgTl6043IvkZlwXhTF1JNvTbqvA5UYNn9E9CfWEM5rwxCVLOcs0BolSRT1s4sK1zFsNSJSNbvVTiZqR0MXEeVzW3XhmHLkOSRx6WenZd6pagAaZ5YddH7VXU/FKXaL0Nw==
        type : 2
       code_elements :
        internal_properties : BQAAAAUAAAD2Rkbx+OjeaV6cz3eLdX7jB0Jgs6WDDXWz15HdSBZm9oeZQ2BKnjRAOa1wH4EQ9d5x
        type_code : 3
        p_codes :
         -
           type : 276
           enabled : false
         -
           type : 277
           enabled : false
         -
           type : 278
           enabled : false
     -
       name : Colonne4
       identifier : 0x2baf21c601f81f13
       internal_properties : BQAAAAUAAADySUBhWxFdtUEAe6WDSiIcvSsDQ3G6x1s15W9Er8/zhpVvY1nGfJAsnZV/639lqHSTYzVYsE1yr6hrLwPiUUpFIUQoSBTZvfW+e+rXU9nNEuNTNvchiavUNZ1Fk/PGZo5mZRtBFSFsyCXV6aukAys4wcRLaEdu2ISkH/XO5PRhWLfke3w=
       type : 2
       content :
        internal_properties : BQAAAAUAAADbOYF1ESatxicbNMvgrbf0x2jAXpWh0SeKIPV8dhglPWgI+DTUHWhSgRXwF25qxAuMTg97E9gN81gIyAYwWFv95h4R7fYLqlzdy6NT8NdPlEBZt9A6rkdVnwkElziWgY2xwCzeHbUbVfflMahjbekT1rfUPaJrO70noJNTk6f+RdewhMyUnQZdOjFbsuJzlaUg6+JbLES3Nfkg+nNN1ucwlY9m7hdXvGSHm0WQdpQFNz78ZbUMlwnqkjbuRQ0iGBa/+UIEf8a5aedD9zEEQC6tdzBSK4zZUkkFrkdF6IUK6bumihnZiVVOehvjN5Y+MTh98Bwwco0fIIx5H38VoWj7qTQeUdLHj91G2LRZ1iY/DdaTsQB8bGOklWq71wOkCcqz8L5T+FHUb6KGg/tYgBxVKooaMsuj67J0yRvUQ9BTQN5DQ4xp75QxTXdbyWQv7OW+IwsP0BfKZQUWIFvNc5b0pxqglDyclBu3Z/sP6Xu3N/w1BRJ3YLc2sagR8yvE6S7rFmeLe6EKFVdpE6lQKlsC28QPpj3Rhaq2bYXCVDKFTOWnsmsa/sRrkz77lpSwc2pAh2u5idfbWH9Z2wTRJzVly2sT09CGxBEa3jwVCU1c8Z82kJ3cH7rzk+OgUMWaxji5GhyyaLby15G0sE8ZpPuCPAzx2VGlpx8vsrYmRTU3SqgTl6043IvkZlwXhTF1JNvTbqvA5UYNn9E9CfWEM5rwxCVLOcs0BolSRT1s4sK1zFsNSJSNbvVTiZqR0MXEeVzW3XhmHLkOSRx6WenZd6pagAaZ5YddH7VXU/FKXaL0Nw==
        type : 2
       code_elements :
        internal_properties : BQAAAAUAAABfs1VaT6Yl+iSiMsTdk9/39DWoD9oAV0FHNs7jIZ8jDg1aLNpLJCG48/mL/gjRH5E2IAO0zqciUqYOueoFgWZDexDZzy9W/sO6KdfQYmtcoeKTFsF3
        type_code : 3
        p_codes :
         -
           type : 276
           enabled : false
         -
           type : 277
           enabled : false
         -
           type : 278
           enabled : false
     -
       name : Col_V
       identifier : 0x2baf23060297ffbb
       internal_properties : BQAAAAUAAADT97zQkGMurDKZIJtaIhWS5330HJ0b5x0GsIGzv0WJnbEJK0AIMgsWB0HWwtsB/evbbhdE+4JM3L4FtAgWpYVsODf0BvAAa5VoADXtsv0qMiOKMSyCEfRJvN9dQG2jmwMEshKQx/sxT1rgKG3xJ8TRdb8nq5Ck6VrYY9DcxYWiNIEy0mezspXtY9dR
       type : 2
       content :
        internal_properties : BQAAAAUAAADbOYF1ESatxicbNMvgrbf0x2jAXpWh0SeKIPV8dhglPWgI+DTUHWhSgRXwF25qxAuMTg97E9gN81gIyAYwWFv95h4R7fYLqlzdy6NT8NdPlEBZt9A6rkdVnwkElziWgY2xwCzeHbUbVfflMahjbekT1rfUPaJrO70noJNTk6f+RdewhMyUnQZdOjFbsuJzlaUg6+JbLES3Nfkg+nNN1ucwlY9m7hdXvGSHm0WQdpQFNz78ZbUMlwnqkjbuRQ0iGBa/+UIEf8a5aedD9zEEQC6tdzBSK4zZUkkFrkdF6IUK6bumihnZiVVOehvjN5Y+MTh98Bwwco0fIIx5H38VoWj7qTQeUdLHj91G2LRZ1iY/DdaTsQB8bGOklWq71wOkCcqz8L5T+FHUb6KGg/tYgBxVKooaMsuj67J0yRvUQ9BTQN5DQ4xp75QxTXdbyWQv7OW+IwsP0BfKZQUWIFvNc5b0pxqglDyclBu3Z/sP6Xu3N/w1BRJ3YLc2sagR8yvE6S7rFmeLe6EKFVdpE6lQKlsC28QPpj3Rhaq2bYXCVDKFTOWnsmsa/sRrkz77lpSwc2pAh2u5idfbWH9Z2wTRJzVly2sT09CGxBEa3jwVCU1c8Z82kJ3cH7rzk+OgUMWaxji5GhyyaLby15G0sE8ZpPuCPAzx2VGlpx8vsrYmRTU3SqgTl6043IvkZlwXhTF1JNvTbqvA5UYNn9E9CfWEM5rwxCVLOcs0BolSRT1s4sK1zFsNSJSNbvVTiZqR0MXEeVzW3XhmHLkOSRx6WenZd6pagAaZ5YddH7VXU/FKXaL0Nw==
        type : 2
       code_elements :
        internal_properties : BQAAAAUAAAD2Rkbx+OjeaV6cz3eLdX7jB0Jgs6WDDXWz15HdSBZm9oeZQ2BKnjRAOa1wH4EQ9d5x
        type_code : 3
        p_codes :
         -
           type : 276
           enabled : false
         -
           type : 277
           enabled : false
         -
           type : 278
           enabled : false
     -
       name : Colonne7
       identifier : 0x2beff048018055f7
       internal_properties : BQAAAAUAAAAXelfd1o7Zqg+Y1bwYpRo8vdy5rHePC/9wjKVzJnNyEa/ICHGtcXsijJgeKSx5ElYqSgDmAecM26EU/AWp6jVuOlMc3/jxGtt1OoB83c+6pX/MKYY4qThE6HoJkGGeFI1Ps7p59HQ8MWn2MXIavWT8JYuqHgevSq4bh8FnZJMekLbRArxv+87Vvw==
       type : 2
       content :
        internal_properties : BQAAAAUAAADbOYF1ESatxicbNMvgrbf0x2jAXpWh0SeKIPV8dhglPWgI+DTUHWhSgRXwF25qxAuMTg97E9gN81gIyAYwWFv95h4R7fYLqlzdy6NT8NdPlEBZt9A6rkdVnwkElziWgY2xwCzeHbUbVfflMahjbekT1rfUPaJrO70noJNTk6f+RdewhMyUnQZdOjFbsuJzlaUg6+JbLES3Nfkg+nNN1ucwlY9m7hdXvGSHm0WQdpQFNz78ZbUMlwnqkjbuRQ0iGBa/+UIEf8a5aedD9zEEQC6tdzBSK4zZUkkFrkdF6IUK6bumihnZiVVOehvjN5Y+MTh98Bwwco0fIIx5H38VoWj7qTQeUdLHj91G2LRZ1iY/DdaTsQB8bGOklWq71wOkCcqz8L5T+FHUb6KGg/tYgBxVKooaMsuj67J0yRvUQ9BTQN5DQ4xp75QxTXdbyWQv7OW+IwsP0BfKZQUWIFvNc5b0pxqglDyclBu3Z/sP6Xu3N/w1BRJ3YLc2sagR8yvE6S7rFmeLe6EKFVdpE6lQKlsC28QPpj3Rhaq2bYXCVDKFTOWnsmsa/sRrkz77lpSwc2pAh2u5idfbWH9Z2wTRJzVly2sT09CGxBEa3jwVCU1c8Z82kJ3cH7rzk+OgUMWaxji5GhyyaLby15G0sE8ZpPuCPAzx2VGlpx8vsrYmRTU3SqgTl6043IvkZlwXhTF1JNvTbqvA5UYNn9E9CfWEM5rwxCVLOcs0BolSRT1s4sK1zFsNSJSNbvVTiZqR0MXEeVzW3XhmHLkOSRx6WenZd6pagAaZ5YddH7VXU/FKXaL0Nw==
        type : 2
       code_elements :
        internal_properties : BQAAAAUAAAD2Rkbx+OjeaV6cz3eLdX7jB0Jgs6WDDXWz15HdSBZm9oeZQ2BKnjRAOa1wH4EQ9d5x
        type_code : 3
        p_codes :
         -
           type : 276
           enabled : false
         -
           type : 277
           enabled : false
         -
           type : 278
           enabled : false
    breaks : []
    type : 9
    controls : []
    code_elements :
     type_code : 9
     p_codes :
      -
        type : 35
        enabled : false
      -
        type : 22
        enabled : false
      -
        type : 24
        enabled : false
      -
        type : 23
        enabled : false
      -
        type : 25
        enabled : false
      -
        type : 230
        enabled : false
      -
        type : 241
        enabled : false
      -
        type : 263
        enabled : false
      -
        type : 262
        enabled : false
      -
        type : 222
        enabled : false
      -
        type : 223
        enabled : false
      -
        type : 224
        enabled : false
  -
    name : GO
    identifier : 0x2baf21cf01fc4298
    internal_properties : BQAAAAUAAAB428TdGo1x7HgM2FoB0Yktr60fWhw3XQHqJS6wjsOEoY6QenHr0xYUrQTYeWTy7iuEggRF4hmgg7lry7TxZrAhf1uwiui3wGk1T+xKCI7Irrb6Sld/V+HqbKFt+9ctPdtSf5mX0xEkfD2wlqv1N+vNrvn1a4HvTZgS9l9moVukFzhw8WDShZsbRwH3OiwRbjYIbi8RSlfXBf+iRPw/CWc+heDtsNs/5atnR/P1oMd/S7RgsDZIDuJ9rg5tN64w0AVp1XlHY12HjZUv7uHehb6N8rYHcNXN7SwnLONzevS7S3Zg+EzHh0ZCdhWVKNFkyqYG72Xv6djeae3b+sk5yx9ZkObr6wKNGd1fvvNpvUGY4sNk3DeowBthG30Jh2gxg9ZIkUiv+Sp1CtNHwfoGkakfrS6ov0cQfiFqJN8T6/NuM77NTgfEFp6FdKJW0eGoNLMd51jgKbThx4gfftC6jrZdpFZKaJV4y18MG6sIV3PcKwhIr7IjiE0GzACV1t1wYfV3DUIn2L/4xLA6L5pOXMAFyOB7Ac7NeUCmogewl/+zFFrnNjr3FV2KPAwx/MQAPv9Cw03vRIiCd3D/DsJE/lsf92oHTXfEP349wL9uoVNzw8O2TzMazNwtmqSjhJnNUVhHqmllMInwM1iSyZrpxkJpn9TN00StlaCmGGY4f3bO22+BUwnj8ERDTDfNFIFVsNEA4M+F9tMo4dEeoDgD1W8=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         nA est entier = Entier1
         nB est entier = entier2
         u  Est un entier = SAI_U
         u_ Est un entier = SAI_UPlus1
         
         inveModulo est un entier = PGCD_Ex2(nA, nB, u, u_)
         Entier3 = inveModulo
         Entier4 = (inveModulo * nA) modulo nB
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Entier1
    identifier : 0x2baf21d9023966ca
    internal_properties : BQAAAAUAAAAKPX0Onowf/gSafIf56A+j0q8qF+FovYBN/Im9iZ87jvnVdB/gcnLdhikfV1V2MSaHnSwdUQRTIpTIG282CopKtda+p2uo7UnThCJqhPQ9/JfA8Fw5ZoFZ3BHHucoA0Q4v7yZz70ZpeLm6feN/1tMfxKBn3uhG2GCaUj+Mh7QNYaNPOXEyA98ZqWK+V3dALWmEKXey0mS/HKlcRef3BdRMVcacCDRH/EjdByxFKklTzozjXdVvUj6UJhJ/OTBY8u7VNmAtF7S/e5lZyPrQqmHhUHlGFn/7ulCT7i+YXvUeYKP4s288VHQtIS1Wq1wGoxZMnbSj5zoj+/mX1j5Ln7sT8UuHewzsXO5/wb+Wr2Hyngt20RarHbISo9XV4KJOT8LRHijTkU+VVwV3KKFfaIWeZbo7qmiShqia1PGbpfWmCpRtl1hfduB2QOWObMlUJE7rXuUvRK0x7rqd3tABmCL2OyLiRMCg0b4dnEt2k+OUQZP2Z3m6zWw2YBC/dD8PFnDtkenm/f0EHBMUiBH+lKI0Aa7+EK+IQi1M3/LPiDWX7xI+6UM9XRvHTm14kBCgNTf6r9rv48vO/FVEisG9kctXvT+CgHpfgzMd7oir+w+zpDUs9vvKZG/ePx8iZGYXPcTUQNuA18qXN0Z0ctGNlX+6UGzCiCSCocRkAEn02CUmYoadvpLYZTUDXzhRq3JuwBhZ+WWRGlZ4Hlcy60KtImS72u5UXJ+3Qaxp3e4zfhQCp1alcWNy0uDsIdRAZ6GKviasR9h+w7PUtMU/VHwU1M8ldlthxnYnn+q31pi3dSyqQwiFeTDwVVw+Q23P+RfvL0MtfKZ4ZlWy6PUJhDW+FxNU2ciMCPIKlxeArZkDo9z5ZkMQqmXtSrMg7SMoNYCdF4UQz2JfDqNo+uSMzzhicCc9N9vwfPNHmzAZkxtEKXy4VRbjWq9Kwj8mnzNN1N8RolRZ1s14M2d2biBoDpmaKPc716pEG0N3E9eNp5fxRLBOWHa2Fe4=
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
  -
    name : Entier2
    identifier : 0x2baf21db023b712a
    internal_properties : BQAAAAUAAABwkWusn+l6wBctWA4U2W9dQqqX63Gz047bjYH6z5geKs2WTB/NoQpMFsmsQLpzNTU4zF++Jd4XJE8UWkL83DUt6wxronYB6Vtu+zj4sPUpiNRD6RXx0lP9V9KgDYLmk9oLM2hfRnTEjlvJ8LoZJDkzaE5mmfK76DTPNdLafpDig8ItKhjqi+DmBpVCFGxGOK/EN3lue/WO6+wnx4L46iSFy/rmbIJdB3B27/xnFz+t/fLTMFsJLFS39Wl9qNBRvJ73c3FRlsOh2Vmo6zi4m/oZ7p62MOMkOy6OR7UOZqz4XgV1M0sn1xXN9DbtKIj6rr+zjLefHR+xY2qJKUHPAkgr310vtAJIEtnNeHrbvMmtlSvi3vbLvbNhkTGr8kQ+UkneWzLbjOD/Hg1yhGUjUDT9itEtVK8Q4bMQVQla8YVOnOdmy7ublMd+/TOPbL+RjkXbc8G2Fbb9xP+CRJYok7JK7Mv3CkZ37PiNhE3fC922Ai5vWltVlyHhpFNjOa5BrJ4t/biidjkytgx/tjhtrhCqd/hrDO66eEdbHKoCr7fvS1ZWqD8a32M7ryAe0e8mZ9mGv9nv9KWqfJRtvsByXTnNJSPHMIkLTemGCahsGnsNRr86Id3JMF1wfgAOQTm1H+ZiothavEhF+ZXNmCiA+W24uqpTxPXWFUwNiznjU1FMGCJdERb3193Pmr2LDHH+Gqrd0ZSlX05OCEIXYwVSMnpRepLrOORbt/4ekES2ExyEyXp1tNfvjpCIbN109jJsyhY8c+c6EvFCvuJqmnMNniv9tv+SPMPDa1rkWX7iWhhMLYL7DD7/0crIOsIZSsQbueVJhJlewb0UNrAeDpaZEXfHNj78Qwoj5khmOaIdgUsWLaJjaCCJqyjrv783BZA4kiYkt+m5kZf82sBuFiS2paklrAdPVr1RYxXRtARLH8pDFmlSwWsVnTl2mvoyrx/LVb+kFSu6CsM8WJy4OeOA3I3hHAo/IUpHGepvyGuvZoSZwnyHXGav9A==
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
  -
    name : Entier3
    identifier : 0x2baf237302e7a925
    internal_properties : BQAAAAUAAAAk4hb9KY1VBPojJjl0BR5gXDjeWC+eMwSLJgCl4bEizrcfwF6gE+L8p7+xE9dffXZjkWsakeNn1RLofvMuUJigZrdVNDdYFnXCCi8XqB0ZuxwC+is7Ycnsv2hIUacq0StpInlgdnAtvi7rywyTdt3b/Eq44H7Af8wiRiL9hgSra8a+c7sZqvSUSXWftI/QEUgxITVrsbHWlZ854/AGN8XNnYfAnThoX2QOjTSWwfyFq0qpbuYHqjX0BkpIzD+z2TVRZl4schhazueBItCPHlDTEwkZ8yzzFl6vbxfXiVTfJOUDsoBjgeaQGT6S8nWLoaqzE3GSkfgHN28xumlBijJxgXua+Qtm68NzZZhbLbOJ2Qq6RWQp/qSoeBcun+KUA36jF+IbwfV/j7NY4QT4PpCJv1nmi5496o6/xxUcdT3INb7ZkrmZ35/mmeGwwGqVFfDoo/WdAwHqtGESojQAL3MuTSge8mxS+grwcwsRvoJEzbQ6mRqQDQNtLJipF7/OeNweirxD5mp/rUrKg8nmmoMm35ijTJnN4DUra5q8/BxXynIlZlcUsNMp7akKVLoi2l3pUYxDGG7kEm/gfaUnbFOZwJKB5bf6fS3i4trJFGwwKEEBmrGeIe9rezdsLEzIPZEhzTmxMhY/CqpPRWM3wXApaRSq/ojVoE/0FU1MrVcXEE+L9YJWuM0J2TiMs6ZYehDTb3I5sr1QADKFK6PNF11/m1HEf8rD1pN61JlbVXPY9A7zgSeQSqMUEXxaecSbA9XwncqnkwPpchoiBced07ratWYap+yw2ZnBafXbcryjy9nKZbng64UQcUurp3d89lfR170dIn7IsVxpAgzdKbNhAR2cCKyhPPuYyr2ob6wY5D0bo1V8RzlQq5JUANbAMMBJ2TNEJ8SEiS1sGREY1xar8JRZbUAsQ8yR5rE/oP25JywYtJEeaHMTSZ8cM+u2UtsJesTeMGC3
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
  -
    name : Entier4
    identifier : 0x2baf23b0030f9896
    internal_properties : BQAAAAUAAAAzVGvlBPA/GVLPkfmVZBGqNkx09NUJfo0DLwMUcDPeCx6siOt4JrCkHEzb1anW0LrGJMt/fQuclSvM0fqMNbqOZ6loMgxb3/56q63YnFmFrWihRWW/VW3OV3fNnJdvCvnU9ASUnJxlVMxNOWcc9pPNBjXibK5OLW/VbUI9opEnyfP8iP7Xxy1sjf36rWgTIRWOFE4+gy8Cq+DjReHhyoIj1YekaLfi+JfbeK7sh2gTWHrQAFv3M6D5tHFRWsMO6JCyNOXVhHltLz4A4dL2jweyrRBaM5CfraThMXLCSzQWPM8mSlf97x02N6XNbNbqlD1RCizbMwXu9jbbm4cGtS0Lm7J03vKqTuoIGYAQHx+cvxtV/ADYWveoP9NBtZzTnc98IpSzOffe9upN/eiyCRFUWfLfQK3TIOiJ+1n7GYQtgPblW19JE3qpnQuTadBUKeDZuiI413jvmBbZFV32oJkxXE/cA7p1moEC5jfmFOrGqfzm+l1JyqxWhvc3gICrfoeXVUn+aGP1lgb9xSfqfYR1eoInHHxQfu+OM1X2bfz/eoPe0NiCROwIvova1xICGWAW4+h0nAQUEPXhOo43APRiOfO2taz9o5vgq01TVRVQEp1/NPx45NCx7b8nJF+AZ3faZdBNVoUL7nYoVrVdhyXwvOzdnEOUHxjEEMH6OEKKLB9+9imrk6eh1UO0vwOEZ6Q6os+SrriQFogY5EOY0jtuGHphfYA6ShMIPqfIHVV/CoDFj7Z8LwiKo3fRj0UddJ7XFuAw3x17tGL9jtknIdj1wsaiyNLfPFzHZQwtTRBBjSXlaK58cVFUNgVlsIQNps/HIqlkDEE4iYhm64h0+jPp7R/YoTTKVlPLvDkRu72M9xp4QxvH3ui5pgpuIwaMHY2IABx07oAp4vbZmpOfqlbOGj8glXt+tRq+uXHCbFm2KXgDGDblmLuq9JE8ZtJK880fxSqglA==
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
  -
    name : SAI_U
    identifier : 0x2baf2a200333bf7d
    internal_properties : BQAAAAUAAACziWqjTzjY0qwCiTDFQRKMM+FrL04qoh2VUTaLb902KpyxqR+T0rZ2j3/RehVQZhUZUtH1KZ9lkw3c8xIqNtsvJmpv56Hau70LSUalFweFqsDCWBYDaYcTDDfdcRoSdPJMTZWkPoqe5X+w3mej3iQ3fyG23gAwHGb3+u+1VAdD0KGvnPbpJOFyWyBT4ftm8CEKlAzBD1RngHzoolraQO6JrHPuVhZdn5ikLW2tIrh2NVcAUmhztjzdHNVz0QFkZUcgq09T6xcdNkrXtm50Mg+qUqm2oJmJk8kT4lxoij5HvYL3e14AZABZPc9f3NgUJ6DkbbHuaeinamfQDKSIdCxuHuUUrlzic97w7Lcman29gdS/Zike+VWPzXNr2coqMFyjCxUp76AecvQJP1Ne5zV9cp0f28Wro6TLbBhstrUdUGzbUixlbk2UflDI15ajum+eTRiVNTN4XxVfm+V2TP1GSjqgv+0HzsJDWY8Flo2jK7i3DMeID1IObNTxEO/vldBMKgP3pJCVlWzFaJsvDuGhgR1zEuxgvsgxUrhzzjBdBj5YGqbmgNh/o+wUlA2ssue56UWi+AvI0ugpooBQFIpU+cmdbeDL3vpP3uJBo+0Fad/BU8020aK3hvFbWlCr39Sv9RnqMfslHWhZwn3ILOmrUxdeHpG7y9iJ2HWK2hdoW6OvBrYj8OuCJT1Sdm/s22FmZmBfJqYFoog9apmL7QmzN0mKdqpbFnxUR4y/+RimN+tQNMNZZ/u0zLjZmT43y53VHmLksT6/+5V9r7FH4AAQm66LKpihY+Qbg7ZOX63/BKzOoXbR2UDVQvFFi/3bJj0ZenLdsGYP8qmqDOVtxfzqSEMnOAzqdtDhzxCt+Nu/XSP6TMhi7hvS7WNKkObrLVnS04FGRp/EKoqlCcFX4vlx1EP3oDBsR7ksligCKBpQqkyNTGI6HSJOgzgakRSrpFvdleMYCdSYZF6SZ2w=
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
  -
    name : SAI_UPlus1
    identifier : 0x2baf2a2a0335e42c
    internal_properties : BQAAAAUAAAARmMyVCnAXPRv8NbyxDJmYrBOijv5pfDlDB2Q0cK7YX1fi7Jm26hQvSQ3+j54rDPeBmudciUbZkO+X6zwnJOMI03kfPTf1vKmlZ5i4vzgcPzKW2bTHtPe4dXupsY3629xJHKwi+aQAP4+gv7/hgqg72uVZnTkxk6Xlgb/zM58YNDkIcPaBN+SJ7ydS4cqEPDphWaIrLSMfShsHaz4aouciihJ9Mpsu/JCwehbuxO1s8sy6YyYr+64A6u53ybQcwQfxfrz6r9+zJoqa+Tv+8Gtu0X0ZZ3NbcH2vUdBsOZdR1SGPq4UPdGKghQyz7WWHaqvvR311WEVehHnJEU8Nffjke4F2CN+HdRrme5jTMFT+3eNP+p/QfoltM1ZrMbfnSecB67uMgkGuW7xlARr5cBkLUW8xZRoIud2NJIuLczj/641EuAkF88n0h7eQZbFoXqcesWTzuuD4/4Ydn0PoQT00TGZEzt71JzpdLGp/uNr17QgKZ2V3fbIgUWE6iWVDdJ/xVK4AOC8st+LudbyI2GLTI02XpA5+buJ1zzXahu/n2dNIwQf9pg+U/xk5dYNc1pZyhQzmh+hlQ46IDPvtR3BbBnmcR1InSO03RFDSQd7DDmDPTTBqjRweQWIKvCHEHvhKanC2KIwlzzixY+0k2cKl6dEhxoLG5XmTOG0yVgW1YBUcUipzNoZwLcmyU6rB3NWOzfnM8p8gBLpfbsGeu32w0C8vIPlHlrWJTXIDChGLX1Mf4geUgw39R/uKUkRd/3iZHewdn2eXC4QvfyKQy+NLaKok6L3rDNrxp4ycoJK+sqvUUVBfvu0WarvgSA0aKHX8HBd76YDBZliRqBNCvrVU6jJ9Z+gff+ZoubxrNkR0w2iYCIGEP01ZcOZ8t9AbLTfx0FUkv/3oe/qKc3B0NazrSdI/9bN4YYBwifXAhPKA6nOBGG/Q/R4RoUjSdTX3kWYkIlLtYiiDGDcwGSIqHGY=
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
  -
    name : GO_2
    identifier : 0x2baf7b2201f92bb4
    internal_properties : BQAAAAUAAAAhZbzHUF4BB1wzgGrViVr75fnkCGa53BxNRSxcLZ6xeb1VsKSeohJx48LA+l4drM99oMYOIFYTNfbJHsJCFmR/P/MIGxLeAGuK2UFGOi1yWXQi0ux/esNMnjjC9edwqboIWxfNTcf66AtkhNkdFZpOQV9Hazu4WuvRFimb8ESRxNfoHVyi2PV0/0VJJjPP8ZNt1xdGE4gqEy0GnFdqwL1aMajT8mfgVC9jYsV09kvnfRjgpkHlTy3O/rN4tqi1gQOHdURZ1PDs0JfMNqZPN3DAeMeEEsqKqL79Q1t66QsnUzIEfnB+AMzoU1ThxGsJNanApUkwFBeXviUvGETS7WjVeR0i26YJj689L8RXmMeqqL6weH87UnweMwa3R1hDGZiTC5rgceKLFOqocmUh+eCJgRNyPNFG+WlEErTaKq+V/F0LAT5v+Qoh9tiBhk77pBaIdvcfV1Z63ER8yJLi6R0N9JG/8q5ZooY2EgVgI6raPzgpdbGQK4XlTWPbTBvLD/m/xNaMZ+h8QcuPC1AspQGSQ8TMi6SLZC6S6vVgESBPGsyaLe4XkCBhN8+95LCskqfJynr/CoGgRIpEmBQCR/Ecz+FRuakqFuAHutWkX5D1477EC+5fjgle2p+uG8oM4ZjyDkBHiwA8Xd/1SRTKZO/amrGeNwI+UY3WcJLixPgpcQUJmAPBJieilQxEYbpxnImj6urkemGbb7crXRh/q5hQqwYa
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         i est un entier sur 8 sans signe = Entier1
         nA est entier256( i )
         i  = Entier2
         nB est entier256( i )
         
         inverseModulo est un entier256 = inverseModuloParPartie(nA,nB)
         
         Entier3 = inverseModulo.val0 //()
         Entier4 = ( inverseModulo.val0 * nA.val0) modulo nB.val0
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Gen_TAb
    identifier : 0x2baf889502ceb6c0
    internal_properties : BQAAAAUAAAC2QQiy9Tjz+nqK3M2ozvOu7WQI3NGBDNA3r2hqTiEi5GNqhhiEvQS5Ac6NT2MHPTG5Qt4U47sf7JTDqjMUSl0lueufk9Fjp1+L3khTN8qRMDKGKpHfepAxEBYyyTDR9YgQHQNeq3Ck55TWlrm7iIMinLrtr53Oye01ZEk2xTN4op3NPjg1cn38xOHJUtnRbsiDlE2RZGVUXQfI3c63+bza6Ok5icmx/oolcFzYL5yEKuA9i1ov5Vo7DxkZg9vzwg28pghryr5YUlonD3x6MERkaFtzU0hkzkt/czCK+Mg5g6n0B9GuwMfy4lbFlW8Z0h9HMhKw5li+QFnO1lJjkefCiM7sHL7Entf/Y8zUcRwc/1N2PPHYDInJPFJFlSXjSgQu3OYaQhAaodKJztf05Vk0WV3tmxgM4Gw5u3MdO3540hhZCFVfoMIfWGmjp1+jod7hzX7ZTq79VY+5tib8wJ6ogHr5Vk6P9y674xkc0AY09OR/EPLOrpF9e59f2jC3b3MAz8YBXr6feSn3rwy96zSLTV3q7P+1KcEnxvCLVEvX9d7qwk3jMWosom8RlDX+g1GCLTqzD31EzKCNnwuQLm/71RkiXp1P5BL8pI/FR5uh8hlvBDeWeEtcYgB4SVhQRPRHK8a6wK9F2OatKQbwTE52AeAoYRd3ZmtCo5ukJipEGVOKKNPUW3pRTpnx52nzPMmYXQLOmvGQUp9wqfYCY9LvZTAbLA==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         
         	procédure interne _sDump( T )
         		s est une chaîne
         		pour tout x de T
         			s += [","] + x
         		FIN
         		renvoyer s
         	FIN
         
         
         TabQ est un tableau d'entier sur 8
         
         pour i = 1 a 16
         	pour j = 1 a 16
         		TableauSupprimeTout(TabQ)
         		PGCD_I8VersTaQ(i,j,TabQ)
         		// dump
         		trace( " "+ i+ "," + j + "  " + _sDump(TabQ)  )
         		
         	FIN
         fin
        type : 18
      -
        type : 161
        enabled : false
  -
    name : TST
    identifier : 0x2baf8ac802d04daa
    internal_properties : BQAAAAUAAAA/B8watr8ulJ4MxSTWFpvm4BD5y0ZbVJqPKYOQm7RfRbd1RKTecBa7odpm8lwT4it/aNKqjDDDi9ClKALQhJf+Fi1Q+QxZ5HVlfr3CF+5j5rc7u0YGR1jGIeeV3SqcwFFQwifSfZcxtRoWE7NCA3eiJUxg4dZALtM7SAPYKr8PZkXLrsSLqjGB1iSE5ldhvCnlWrZdzWCy3Q9HNMCP8Zp7s6OYD3llk+7T5vv+Sm3p775CSkJlwm/VwUqcFFNGhLLlaRqCBiV5+P3xqayA6Z34031TiN1dk7OBbIpGGYSlicIbt+8NUApI8VY9g/m9hHOCD4He125MjlhMcn4ZmqUPM2ysIt73q0hOWJMfzJGwHaWZDFL5zXFCejIhm6SKr1I44r50EDnp0XA4hUaCyCPPcR8aWDbJzsyfn+HnF3S+Kbgint5Zzf4EtRFEn99JCrm3DI6Prp9FaklIgOJklQjLFjfiSbQtN64VGD0qIX6egeKDL3deZbPzpwURFOONzbH/qHZucZQgZZd5Rb4yX1DhSLHrSvm2ER9oWk4Yd3BTAAJwBNHkvpMxKasjvOybGu3sFt5doK5SEv/DTeD3dgC1lQU9MCOAd53kh4AyYVoXqSnB40ZdcqZttzPzJqOES6R6pFPR/ucl1PJ6LGMRf9pFd0r1LhnZtrBpJT3Z+1ME1C4um27UzcCt+KHHmPmMy7pSDXGJx9DAK0MvcFFA7k8Q1Sg0
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         
         
         TabQ est un tableau d'entier sur 8
         PGCD_I8VersTaQ(5,7,TabQ) // 0, 1 , 2 , 2
         
         //trace(_AppliqueCoefQ_EulideEtendu(TabQ,))
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Bench_inverseModuloParPartie
    identifier : 0x2bb462df01852054
    internal_properties : BQAAAAUAAADlqppJOOVAl9SmpvUGCXB+nhRuIboUyiLMXT3VqOMnoT7z5oQqpEjnLmjMgMh/a6HgNnL7BIDqv2cJb7et8T2pQqu4fzcgRC0EXlMJE9Qp+0O8n4/8dDoMmc93Ghbh18HnpzAv5petv0jr4u381e38jUQabZfmC4bPvhGLLJ5sdEUnlirscPTjRBzKV/fVlXlgUcgVQIQqg01bcH2SuxIVm6u5gjBtd9npjPtopXMSyVTa2nQig2vUcxZQAPUFNIGsAGUeQfAnWfWFkEf6b+lMNFtz2ZLOqUsx76EmCB7szE0GNFIGH6vbbTWQBFxzqnATBayqu94DecRNH6Jzce4twdmzE3q3P71ynHOfX9J0FhjkHU2p3ZR4t8L4dcQmjw7DVbJ1nqrkslChXtY5UEFDds537ELEzI3Tq9d46Fkm31sQlmD7AmDKFkF3NJIIh3Ec7CwiiiifbP3d3GnnlXZjM2n3uRzL5bHfIfufTy8mC4mYALUCoNt0TUuBdVsMG9qdeAIsmJ7XYgOPy4GkZDgc7FD4tz/7w+gB9DhuiW5lxV5WQVNMGgUa775E+q0u2osO/RuMY8QlHjSf4b0zPb025R3ZGwaQoIO7XZCvRzvaFO85Z5MR647y4cdHn12Gy3yx45w/nB5iqULpZQKcA+ivb2iNNYhHgv/ZXLxcCX21EU3VmVMs5nUu2vMLOnJ6E37+vzUZ7NCpEHtnt+KmSNCFxbTKb5Jm7TtqQGOJzuNueZj4elO6zrPmg8ByEtkv4Gc=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         gCorps est CorpsModulaire( "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F" )
         
         //x est Entier256("2") 
         //x est Entier256("8727b3b7be9139498f2f48f7b88f92203b1ce5ea527fd7dd754F650e2216b915") 
         //x est Entier256("497c0fb9646881ce25a2fc68e89a129135e8715423e73fce0759ecca87d30009") 
         x est Entier256("ea92bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d0") 
         inverseDex est Entier256
         y_2 est Entier256
         ChronoDébut()
         //inverseDex = gCorps.inverseModulo(x)
         pour i = 1 a 100
         	inverseDex = inverseModuloParPartie(x, gCorps.P )
         fin
         
         Trace( "Temps (ms) : " + ChronoFin())
         //y_2 = gCorps.puissanceModulo( x, gCorps.PMoins2 )
         Trace(inverseDex.VersChaineHexa())
         y_2 = gCorps.multiplicationModulo(x, inverseDex)
         dbgAssertion(y_2.estEgalA1(), y_2.VersChaineHexa())
         //trace(y_2.VersChaineHexa())
        type : 18
      -
        type : 161
        enabled : false
  -
    name : HGCD
    identifier : 0x2bbaf07101a70ece
    internal_properties : BQAAAAUAAABVW/W+AtwTmoiI9KNiyPm8f2oaUCbGD4dm/OQvLv1K8YuYzUeSW8k4LqhDI2BCB7Op4FjufdmlvE6FhBpX8lGF9P8WExfD9tAxyP6xgyQXPnRCxvXjzjwNnCJjOe6gge1dP4OYqaMO7pHoTgkD+XT6ODCAcOuRCiGfG6X8gnBltqdie8hdJuYBPDDFQhW54kx7jBmhHF1IRceAdYb7iYiGuFFtofE5MsoN6GTwW/xAZohdJ8L/TTajPxGhG28j9gl0bvwDmubUYsq3l+Qu0KAY6Gv/W8DM6hvv09Dy9EB9xwncY+HesBO6WpadLbPJNvNv2vZQBvCCUHmeXhpPsdueYJbwRNa8em+nI+y0dRzYK7tm4r8i6nfvRkCTS5dRKGYw9vQAVIaAR9RvDOXeC6emqw/rSYoC1mproVFzlVQmbDojXtuBRmgNOt+pfUnBfygrl0yfkBxTM+k3nDyOlkTS0iQPbACtFZTNqX/qynxKngZxfhBItK/bFQ1tKIoNjR2qkRyfUBwF5yvt9drnmdot74dIWmGbH+/B6KvO8rZ6lCe2A8AkiYV2xuOOWwzGuLCABk3qxCHfcTUozjn9K3tnpQcg670TYUO9xAe13yuB4hF/LHNOMAc40Dg+sWdm0nz/TEG+MqtDP/LJhS72CgSgy8q6aXs7KV9slQ2vImMPVhkno/ZUbcZb/Obuhixo5WAzsN2VI2gb3/gtfC2HpgusJzo4Dw==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         
         nA est entier sur 8 sans signe = 0x2A955D47354BA834 // Entier1
         nB est entier sur 8 sans signe = 0x23384E3A67BA5975 // entier2
         
         //nA_H est un entier sur 8 octets sans signe = nA / 1000
         //nB_H est un entier sur 8 octets sans signe = nB / 1000
         
           M1, N1, M2, N2  sont des entiers sur 8 sans signe
         ( M1, N1, M2, N2 ) =_HGDC64vers32( nA, nB )
         
         //trace( r64 )
         //trace( M1 )
         //trace( M2 )
         //5780si EstPair(nbTour) alors
         //	Trace(nA)
         //	Trace(nB)
         //	//Trace( nB_H * M1  - nA_H * N1   )
         //	nA2    est un entier sur 8 octets sans signe  = 1000 + ( nA modulo 1000 ) * n1
         //	//nA2_H  est un entier sur 8 octets sans signe  = nA2 / 1000
         //	nB2    est un entier sur 8 octets sans signe  =        ( nA modulo 1000 ) * n2
         //	//nB2_H  est un entier sur 8 octets sans signe  = nB2 / 1000
         //	Trace( nA2    )
         //	Trace( nB2    )
         //	
         //	r64_2 , M1_2, N1_2, M0_2, N0_2, nbTour_2  sont des entiers sur 8 sans signe
         //	(r64_2, M1_2, N1_2, M0_2, N0_2, nbTour_2 ) =_HGDC64vers32( nA2, nB2 )
         //	//Trace( nB * M1_2  - nA2_H * N1_2    )
         //	
         //	//@Produit matriciel
         //	M1_M2 est un entier sur 8 octets sans signe = m1 * M1_2
         //	N1_N2 est un entier sur 8 octets sans signe = m2 * M0_2// - N0 * N0_2
         //	
         
         //	Trace(  nB * M1_M2  - nA *N1_N2   )
         	//Trace( nA * N0  - nB * M0  )
         	
         //sinon
         //	Trace( -( nB * M1 - nA * N1 ) )
         //	Trace( nB * M0 - nA * N0  )
         //fin
         	
        type : 18
      -
        type : 161
        enabled : false
  -
    name : HGCD_256
    identifier : 0x2bc35abd01472186
    internal_properties : BQAAAAUAAADpLubU65PkFo5lYRB9di8bJzuRGb7ml8RT7eUbjWJP+lPpiBdjXvJfuwkSn1ikIThuz4Raoe82usjCo3oFKRatPvXHugpvKpFZcehEcsh0nJvUxnXowcra0UA04C/duVFYoZk5XNB3WJrlheP1xpTlUF1fG7WDZBlu0DFgqYZd/j0TdTqklX4a7gKr3B6jjRMajUyE3xELDowbSVGDN9HvUIP5FVBWSk+QSN1ePHM+5pfpE7c2VOz5/k+Bvvue2y0eHLh/PswiO3rBm8gPvFDQOb04RVShUTCPjIYKarMC9HcBMnk4RtL3GsqXxrzd2Ak0R85s4Q+krVEgeBKpa9BWZNDwoF4IvkWOW7it1cQw+VDgnCwfi7fUD6HKCn/gnghxcH/hBkXkAh9irxJCSs0ISK1mzH6F1k2ySFgwXfEIklkR9xzrI9wWd3S6YMmi7xg0abcGyqV37mj+qwPOq6awJfgYd0bgs1WGHjr1aDNkhCu3N99AMb+SgLSKlwpY3X01iz2yEnfZmuIsvN3FJAb5mnGJlbH051y+H6Mc7gQjEQPuiwzRbDCdTxxQTXVNB1VZ02ngb/8+78somggSBa+L8i3F7ZHC4hlOSrWg/64jRGe6C+whiNMGGbFXFgFnHCgIXCAg4zo37rIJssbSNKcljYu/YF+YkGrVsuLTX84Ls/3npeRCfmJeT2pfYjJHitdpU1W1vylSrY8PBawXe3E23jGdepQRLxdv4Gg=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         
         //nA est Entier256("0xE541541323354631A131320231222369")
         //nA est Entier256("0x131320E541541323354631A231222369")
         //nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF")
         gCorps est CorpsModulaire( "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F" )
         
         x est Entier256("ea92bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d0") 
         //x est Entier256("f89c02abad6904a2e892bbf61c06f4dd0115471f8d72a88df612ff0f72290670") 
         //x est Entier256("F434636C9994C9FCA34DAB8739A04F699BD19B5945862F7411BF89B400CC9930") 
         //x est Entier256("4298ef9acc9f649aac346b7a8c638e5b44e21b4d725339874caf2cdc1d079be5") 
         //x est Entier256("6ab25deff4b35b971c0a059add76a64ce20724128d0ea92bdc008249e599c257") 
         //x est Entier256("dd76a64ce20724128d0ea92bdc0082496ab25deff4b35b971c0a059ae599c257") 
         //x est Entier256("dd76a64ce20724128d0ea92bdc0082496ab25deff4b35b971c0a059ae599c257") 
         //x est Entier256("6a78370c5d3d16db557cce0771741d05db2ded89c11be6b8e266ddd32a484c9f") 
         //x est Entier256("26b402aee6aac2e00a2aea5c88ac024ec9b3e786d646caac3932580eaf8ce81c") 
         inverseDex est Entier256
         gbModeTest = Vrai
         
         //nA est Entier256("0x354631A131320231222369")
         //nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFF")
         buf est un Buffer = x.versbuffer()
         //r64 , M1, N1, M0, N0, nbTour  sont des entiers sur 8 sans signe
         //(r64, M1, N1, M0, N0, nbTour ) =
         pour i = 1 a 40000
         	jauge(i*100/40000)
         
         	inverseDex = gCorps.inverseModulo( x) //  inverseModulaire_HGCD256( gCorps.p, x  )
         	// cas ou l'on obtient P-X au lieu de X
         	//si Estimpair(inverseDex.val0 * x.val0 ) ALORS
         //	si gCorps.multiplicationModulo( x, inverseDex ).val0 <> 1 alors
         //		//trace("**INV***")
         ////		inverseDex = negation(inverseDex)
         //		inverseDex = gCorps.négationModulo( inverseDex ) // soustraction( inverseDex, gCorps.P )
         ////		inverseDex = additionAvecUn(inverseDex)
         //	FIN
         	
         	xy est un entier256 = gCorps.multiplicationModulo( x, inverseDex )
         
         
         	//Trace(xy.VersChaineHexa())
         	si pas (xy.estEgalA1()) ALORS
         		Trace("***FAILED ***")
         		Trace(x.VersChaineHexa())
         		Trace(inverseDex.VersChaineHexa())
         		Trace(xy.VersChaineHexa())
         		stop
         		retour
         	FIN
         	
         	buf = HashChaîne(HA_SHA_256,buf)
         	x.affecteAvecBuffer(buf)
         fin
         
         trace("[ OK ]")
         
         gbModeTest = faux
         
         	
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Right_Shift
    identifier : 0x2bd7fd8000ea9f02
    internal_properties : BQAAAAUAAAAZOchTEkr1URYIXUQvZh9UIvIpjUz8sXPntWRIdnCzF/26ZhMgo8BML0oMRMGrho/JVHYGwEGOwKIp6BK7ho2gXremu6Ye7iiSDxo+NP8Kel6mcnlQcrpmRCYY85okL9639eLlf6Hlqat6wi1RutgxEXcjSbehuTXZKU3mES9GO4JU5+P6R9Thj9Y5I+ZAXK4cyitBxCZWu9V42HATrKV2RROOibTJFFVpSQlpZK6EbDkvfM3e/ykS2kf8oxymPYBeOiIeyhcKKhoZIhoehkYkGMLMdUQ8yUQg9Kx/oq5YVL19dGda9/b49COKWdv46M4kXLR40zaxmKubTY8vnWsk+BdxipIKLFCfNGyTeaT5eUG9Wap6arzDqqUhzGodd7Ldr82b61b/l9REqjhbPfTgAuJaQpmuIRorHMUkeO5pQIlmaRRywonhnrojmkAzcJgaoq+of2QEhw1MUKcPhPOCRRveUyPVmkoXit+lrdRREvuqJ2UTtPhRzxQVQ53NMjXj5o1g1VyYa//q+zeahwFVnBB5ryYZLik/awb0Dsu++WOOW7hqKotVcW9htZDJrjkgulk0/7aWqfy5wcYBAjxxQMZLnXxzZaJL5Mho5LUOwhePvXgc4V4VnOPcjojrR67QsH+xPoOE8xpU6/5Jxyov+2/7jO6NoJK5hZ7iQa7X/179uDPzL/PhfgALlRQXoxyPHyDQrAEBNCM/GMzKstZvR01DagGe5pAtwDoOeg==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         nA est entier sur 8 = Entier1
         nB est entier sur 8 = entier2
         invModulo est un entier sur 8  = Right_Shift( nA, nB)
         trace( invModulo )
         
         nA_256 est Entier256
         nA_256.affecteAvecEntierPositif( (nA) )
         nB_256 est Entier256
         nB_256.affecteAvecEntierPositif( (nB) )
         invModulo256 est Entier256 = Right_Shift256(nA_256, nB_256)
         trace( invModulo256.val0 )
         trace( invModulo256.VersChaineHexa() )
         trace( (invModulo256.val0 *  nA) modulo nB )
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BenchRight_Shift
    identifier : 0x2bd95a3500ecb7e8
    internal_properties : BQAAAAUAAAAS6Au9yxC9XHD31hP15XUNcejPYGvPBqEUe0IPCfiYY+cjCf976t2kyICiVIJr8fcp//s0awYHXLVTCCbwRApwFqi/dZ+NASbfSxYiw1EjNvVRpOl/VdYuuFAfJVipXqeq9/cAUv4UInxDUFr9+Sv92+QdQZgN05xuMbH39Ztf6aYmM6uOxIo3hCnkdLgASWTWmnCFJ1dIj//6bPTRFpoY8+Uc09hRZ58KmvXzLZ/Vw38QE5y31rC0Tstk0zpKUYqYegERWbOOQdaFvQz3mnWOuzOASByTuTPHf5pyVbqxKirz3jHrZQVJ+yFPHtK61RdIl1EPIccIaH7KYmMyF4lMhHKA3DR7bqPgs8Yz6ej61Gw62VhFY88wPQusvwflqhh9SGf8hGo/Eux+XTOiez3kiM9+SYI+HVUjqspRveAC3Bc1iQGZCvUWNMo8SxMbnW4O7RWlhkKaloma3xrGAva8iTbebvjJ2o35dpQizjx8CKOz37LGAo6yiXq6MH5FQT1hR3uPqt5C1NNuVNThq96lBpuraJ9xSgqDdaNNt2qk5s3ROb1Hgs9yF7UGmhPbmcOYfdGxw99pcXvO8UD/q446PYqO1Vzk8CQCZUag+kboeyBjhhpQRKcNUW6I8BRkRXTstbsKykadTdgHtyzMnoyAq/x5dbE3kOmN8T/C37fbj7uYNkJRsqrYMBIxNbRwYuZ8YRMioLkS4nnvI7O5+Rcbe+n4la9VsBOn+laCaWfe62/7
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         c1 est CorpsMudulaire_sepc256k1
         //P est Entier256
         //P.affecteAvecChaineHexa("0xFF")
         //c1 est CorpsModulaire(P.VersChaineHexa())
         nA est un entier sur 8 octets = Entier1
         nA_256 est Entier256
         //nA_256.affecteAvecEntierPositif( (nA) )
         nA_256.affecteAvecChaineHexa("ea92bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d0" )
         
         //invA_Modulo_Test est Entier256 = c1.inverseModulo( nA_256 )
         //Trace( invA_Modulo_Test.VersChaineHexa() )
         invA_Modulo est Entier256 
         ChronoDébut()
         pour i = 1 a 100
         	invA_Modulo = inverseModuloParRightShift(nA_256, c1.P)
         fin
         Trace("Bench : " + ChronoFin())
         trace( invA_Modulo.VersChaineHexa() )
         trace( c1.multiplicationModulo(nA_256,invA_Modulo).VersChaineHexa() )
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Bench_euclide1
    identifier : 0x2bdfe6c8014cc392
    internal_properties : BQAAAAUAAACuFwOA+UBl/848uNee2xQ0KZQJSZob22/N59pjtMA5eoDxKXYyim10WytfR4epmwZDBP0xuj4xdk/JwHUNGQBOIXf4hbI97Y1D3+wD2pLzcsLJIVEna+/ijxqMs+LsltdDhf+Z12j7353bsWAJ0L21d7yevMuAJ2asJq10t7dpVC0dZv6aCFDkIifCbbQdV+xF3uFyIRotbW0WL+kDPq4BepOKSTXucF+f9R9vZDOxxaPkAyheFWMeFuFbreSeMG3OSzN5qUHVRfOn0+CjurTWy3v3hrGywgyDvfDntzXgX5enCRKjentKHBUhwMB1sPp8fszTiXt/fZ4D9tD8hlzpFRbFAKXuIikn+QLQP1Cfk1teEeH8k0rsa5GPqlpMgcfFCmmObLPSeNKjTafExobL6lITQHxVrz+tvKdykbNn7SugaqUMNrLuMM8zjgKWGw0nq8z06U79BcHoOAkRaN637ep2sH04M2vL3WYWAXHLpQyxlVAWnaDWMBdPy2vVJU773nvZODuMESdlSL7ri/C8AxlRlRh+6eAw43LKzHc9Y7Jo7eH2dPr8BMuZj5W22k8IpvWB3r8hJ8ntidm74vgOTwk9wick0f65xoabb0gAuGfHWykppHV0DCHC0Mk6JfP4ira34ijW13Z/5hoYZ30LHF9O/D2Ot47kL4xqqi+VxGZ5+NADd3R3c8zOlETPYLUXZ7f4oNtMkiNEmCj2Q1P5jj2gOFFK
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         gCorps est CorpsModulaire( "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F" )
         
         //x est Entier256("2") 
         //x est Entier256("8727b3b7be9139498f2f48f7b88f92203b1ce5ea527fd7dd754F650e2216b915") 
         //x est Entier256("497c0fb9646881ce25a2fc68e89a129135e8715423e73fce0759ecca87d30009") 
         x 	   est Entier256("ea92bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d0") 
         xPlus1 est Entier256 = x //("ea92bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d1") 
         _2 est Entier256("2")
         xPlus1.divisePar2()
         inverseDe2 est Entier256
         inverseDex est Entier256
         inverseDexPlus1 est Entier256
         //y_2 est Entier256
         
         inverseDe2 		= inverseModuloParRightShift(_2, gCorps.P )
         inverseDex 		= inverseModuloParRightShift(x, gCorps.P )
         inverseDexPlus1 = inverseModuloParRightShift(xPlus1, gCorps.P )
         
         
         //Trace( "Temps (ms) : " + ChronoFin())
         //y_2 = gCorps.puissanceModulo( x, gCorps.PMoins2 )
         Trace(inverseDe2.VersChaineHexa())
         Trace(inverseDex.VersChaineHexa())
         Trace(inverseDexPlus1.VersChaineHexa())
         testMod est Entier256 = gCorps.MultiplicationModulo_Montgomery(inverseDexPlus1,inverseDe2)
         Trace(testMod.VersChaineHexa())
         //y_2 = gCorps.multiplicationModulo(x, inverseDex)
         //dbgAssertion(y_2.estEgalA1(), y_2.VersChaineHexa())
         ////trace(y_2.VersChaineHexa())
        type : 18
      -
        type : 161
        enabled : false
  -
    name : X_1
    identifier : 0x2be6f654019361b3
    internal_properties : BQAAAAUAAAA0BjDvD478/LBEpEpglRzrsvqKRtmnr3cUEmod/d/brL1a9JqVkZfjp21LhESVBiIMXLyTv74PqapzogmNLe5Q6stX8opBj1VkW8go0/pEzLc19OvaUlYOp9rBhF5k8uqglQP83qOJT/xdJFAmAOplm1ZFxuJDMIY19qxMvHVfl7mtBTvEO8zsKi/HwrkzdCbDXH2GKsKCb8jsZiX9ZvucRjIxZn/Ww2E2luEFd6D2V51bEeCAaCa25EYzmkMlL7LxqtEVfQHfmn5KjUlAZxtY0TbT+EhDWVzgllkgZ8dk6q36AfG3/I3hS/2M2mdeCCTVwLUzKTSHTDVVHgzYg2OceOyrly4CK5fj2B5sra1nZa5h8f1+PrRt3BN8//0+OQ/RBmfiC+lF+7q2YvoJRPLodG2AtyVNJrKIahBLwOhYRgU5FeQkBjgDSYVbPOIcChlvDuxO2zUH3E3wh7ICxrTej1ySKRK3HCddPiaQ4gA2Jm3LwdCkbJRcabq8Nujro/O/r9W1clb6CA8u9Hx7gYLx9ov3LMXTWAAjR1PVX+Vbf2d1u8s71is21dUcjA+vz4VueVs/J0icDpz55wrR6+FEPfIS4v1PDbPX6d2nlE1qx3Nz8MleDx0YQEW148iucE28gByDjxu2XKcTYeG5eAysqs8ZZYOHRM7CNANMVVy+lCg6dhdbbbk/WS29cpIaiQsU7GyX4GAdDcf50mTA0PnjIyM=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         
         nA est entier sur 8 = Entier1
         //nA_256 est entier sur 8 = Entier1
         
         //invModulo est un entier sur 8  =  inverserParXPK( nA)
         //Trace( invModulo )
         
         nA_256 est Entier256
         nA_256.affecteAvecEntierPositif( (nA) )
         //nB_256 est Entier256
         //nB_256.affecteAvecEntierPositif( (nB) )
         invModulo256 est Entier256 = inverserParXPK(nA_256)
         //Trace( invModulo256.val0 )
         Trace( invModulo256.VersChaineHexa() )
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : X_2
    identifier : 0x2be85e4b01987cc5
    internal_properties : BQAAAAUAAADnXHHVa7qIoH2kk2F93a1uxt71GhOb5+7AeY35AQIjUVwCioXKU44roG3P1GMSV5G2A2MI6aAMpONhgHibeeEClUFN6RB+mimVUhZVf5TxVBtYLxvQrEFc+e2yv7r1guc4nJ3RCgidvvUl5w3FDRhdX0E7oeTDTUyY7uLFnQwyCtnsN3P8fUVcbf3e2hig4mNvgLurlEXlS3vGCJMNfK9xhU56y8F7gr/A6c5e1zRGfRU9lnjiqJDQSKeqezVWiCsgbw9Rk9xm+V/9vGTHD+Nx88RfCn1xVGzIjr4lxolWGlWOQTursi+8WhmRd9dZeslx3fq478twul42LRi/Gq6hjRZwPTMPqv8LiLQ7B6YIM9/IJXxw8wXrrPggWUh9d11dPZfQik3jbyxGUBRN4NTWntdU4/IcBgXW6Oij9byyPk2cVgDgW8PshHQnB7h4hk2aBznyIy1vjFOyRDxZyH0XPq56kez4q6j8e4lHnU7hW9SsIHEFy/UvVNkB6SW+TthOmC5svwFPxyYL1UuUGOiv9Fmn2hbyUS7g/mSHDhIu8rrT7sT+jRbeQvDnp4FfpYyWtbLA3kIYPDRTeIGaMI2DpAM7iKtVL7WK9ZAeHtJuRCB9q+OeQocdpH/wqybqTZkr6E/7ke90/Ce9rV4fDEiIJpb9DUFahP3Da1o0lUPNtX95TaxLXUF91VO9r0vN/6FIDp40V9eJ6zHwy+5muw08cX2Bx1s0SMcn9BRkTYy0Jkbf7VqK1m9DHsxI8c4F912SVg==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         
         //nA est entier sur 8 = Entier1
         //nA_256 est entier sur 8 = Entier1
         
         //invModulo est un entier sur 8  =  inverserParXPK( nA)
         //Trace( invModulo )
         //C est CorpsMudulaire_sepc256k1
         
         nA_256 est Entier256( "e392bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d0" )
         //nA_256_LOW est Entier256( "28d0" )
         
         //invModulo256_Test est Entier256 = C.inverseModulo(nA_256)
         //Trace( invModulo256_Test.VersChaineHexa() )
         //invModulo256_LOW  est Entier256 = C.inverseModulo(nA_256_LOW)
         //Trace( invModulo256_LOW.VersChaineHexa() )
         //inv_70 est Entier256("0xEF70")
         //Trace( multiplication256x256_256(inv_70,nA_256_LOW).VersChaineHexa()  )
         
         //nA_256.affecteAvecEntierPositif( (nA) )
         //nB_256 est Entier256
         //nB_256.affecteAvecEntierPositif( (nB) )
         invModulo256 est Entier256 = inversModulo_SuiteDeDiviseurs(nA_256)
         Trace( invModulo256.val0 )
         Trace( invModulo256.VersChaineHexa() )
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : HGCD_129
    identifier : 0x2bf3bda502467588
    internal_properties : BQAAAAUAAAAvLiE/rH4R0y4BksyQuDIxG9vqp1Z6e2PJh7PoYfhnomhzvJVBtXB/TmDEyAJ/Vtp5SiYmI2nK1up/574WHkD1S9zrS+Nj/qoeZqaScfS4uT8TiZH2lWUVleGAySK1U9BP9MA8a4xvoFZPJpNN22erfZn5wSa1MlCOmj4M5AXH4kxgODyDDbHLPZ4ini9I2DOEBQ9bFEdVorawUsvvFdaabaMD16n5R3ygVjQyZ2J44Di0IJkTvsrVY1NTDpJOIzYHoa+I3yG6IBV4pN3NgjHKOjkr9tBmLitTcqy3/JVsNATC6OyiwERwAkoTC/D0fpsx7IiLTBYah66Cq7U6i9K5yInjbC6A/6FxrGBHqkhshWsVZrYF0mT2lME5z0Vm24aSVoUl2qGRiOuZriGBEWx0zx7UIgBSjvJvUyqg340ITmJHEAdwJ00hCe8n5B49+t+pOj27zx0BcbRTdsH3Hw2xGamWJqYq03stBusI79GviwMPOijJS2Om+zJbwFOz8AxFPS6tFRcfZmeOz/QM3UQ1BWaxjdKaJ4tjU0y0PJlwj66EhH/uUeBpn7+h9EfW7+wVMIL3LsiX3qLvD6W3rvySjk20zvLCeO8Sbd/U60pvlUbZhO054/x3eLvD004HqTYj6ml6d0UrDPgOcaMwJSn+VUElKFUQnIL+ApO4qgXCVkQsueDNUno1RWC0gNLnkmzVX9Vgz3tDtghYDJvybq8ChT+/HYZlI439NmGG+QHoNCk=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         
         //nA est Entier256("0xE541541323354631A131320231222369")
         nA est Entier256("0x131320E541541323354631A231222369")
         nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF")
         
         //nA est Entier256("0x354631A131320231222369")
         //nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFF")
         
         //r64 , M1, N1, M0, N0, nbTour  sont des entiers sur 8 sans signe
         //(r64, M1, N1, M0, N0, nbTour ) =
         ChronoDébut()
         
         //inverseDex = gCorps.inverseModulo(x)
         POUR i = 1 a 100
         	_HGCD128vers64( nB, nA  )
         	
         FIN
         trace(Chronofin())
         
         
         	
        type : 18
      -
        type : 161
        enabled : false
  -
    name : HGCD_130
    identifier : 0x2bf50b2402902db0
    internal_properties : BQAAAAUAAAAaHehvil7csfH1mHnYSUZkLIwiqGGZFN0g3F3eDRor0hulQC+bbmgYaj4DMQ5f9QwkeNrcASxG7oh8Nqt0fziiAC27+Bn9tt9Yyp/2F6nRm0bvz1OYIA3NNBpLxyDgjGOxxSOYZAoZTkqrQ+I7+XyZJ0xUb/PX8qISgKVkFWbdgkQahzCG3Inwwd+nwPCfx2bJqVysrkhSCvOtdh3Ez3qoaSg53crzdWpkyWRnQUYdTx0C0l5f2J9MO9Swj1wHIH0zB4Eg6tWsGSwwTnqWPxsF7tFEOkEqCJA/FWX7TKMY2r1mQXFfx/p3Y99YbUMgMW6ri2hB3OVe/9MxRUwaerd3LwojRfUFIKuB+UmK98Z2+6hqCyPs4SHHHnT/e5l4sSbdHZs1ylwUdbGcFvOTWXwKolU6fPLDj/0xjmake6nsgA+wqpvs7oBKD+Cl3vCDVPvUJ9nZrRpi2gSiZElfQ9lnXqp2yADHzGw5SSXaee9h50B0QD7v+HjFJx/XQn3ZUmDaKFTvl0aKy4uFEcAQ7/Jp0infwe6HnOjxjL49xdhb85EdQBcGyqkmY+g1pmHiu/LQy37hMFyAKXngUrksT0iS95huT65HwFM0Xfaa9QjV/BLwOzrXvm4jSosprumxkvJquAru15JflsLDzE5aqDPxLQs/6IcC9thvpAQ9wXajq/GxgZrQZExIxdQFIHA9XEWT85dJa0tAlferk5grVWfg3Eigu66xtyFiExs=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         
         //nA est Entier256("0xE541541323354631A131320231222369")
         nA est Entier256("0x131320E541541323354631A231222369")
         nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF")
         
         //nA est Entier256("0x354631A131320231222369")
         //nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFF")
         
         //r64 , M1, N1, M0, N0, nbTour  sont des entiers sur 8 sans signe
         //(r64, M1, N1, M0, N0, nbTour ) =
         _HGCD128vers64( nB, nA  )
         
         
         	
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Bench_HGCD256
    identifier : 0x2bfa6a6e01654eb3
    internal_properties : BQAAAAUAAAA/ZmHLKMZID1fKnZFDjbJvlcgt7zUgYIJXa5RhObnqwrWmdNlZCX4wSua6Aor59FZyeiZ0FUbg7auNpVEnRrsboBYrhAb2kOQaupIJclnNbUM3KgnDxtt77XMR6AkRi/AeAeW1dJ6h/Netxp37HzeVGIcK2p1Fgt1JLiGlRiYFTI8zDQkgohyA7rBRvaAybuXBCrz7iOxGG1kUztATJOKSE/4S2GAZbok1GUcooGkRAo0Nh5e4Q+mSgbIws7BvcKTcOgI0A8J1+tbeEztbX9BkxO9j04GRS6i+BDQBwvx4eXT4jpDuyG74UDR/oaRJI+04Y7uuX24Mk5fnQhnO5t2EanH7GF98EHtJHMsa6f4qhzn9bDA4dcFMGs4jRL7CYu9xi3xzfKRaMGyNWNyJ8B3rQhLD0B7IbjGzy4ValMW+1VV6DOKVVLBCrO81VvxGCdXmtnwqoviBSHtDQtOT8ar1QQ8bnTjLa9Fdb4UFc8OCN1X87BHG3PFusderE7ust3j92PI0gKrRvI8bW9HsDJiazLBanYWNSQp/cri+0yzna8CwNacYniM68bhu8NPgaMcsIznDth60CzSPETRLGyOKUAAk+4szlhN3ua40ToYVxcOzGqKrh6EGAG6MuqhE+KCV7b8B7NbZpFGg9herEvtPSz8MwlU3Xud16OQYFysKYTaaKDw11Vw/ZxFc+BHfqLa7q1k1y/e86RaMRZoQb334O4bHIFByDu+1c+EzePkwMw==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         gCorps est CorpsModulaire( "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F" )
         
         //x est Entier256("2") 
         //x est Entier256("8727b3b7be9139498f2f48f7b88f92203b1ce5ea527fd7dd754F650e2216b915") 
         //x est Entier256("497c0fb9646881ce25a2fc68e89a129135e8715423e73fce0759ecca87d30009") 
         x est Entier256("ea92bdc008249e599c2570ab25deff4b35b971c0a059add76a64ce20724128d0") 
         inverseDex est Entier256
         y_2 est Entier256
         gbModeBench= vrai
         ChronoDébut()
         //inverseDex = gCorps.inverseModulo(x)
         pour i = 1 a 100
         	inverseDex = inverseModulaire_HGCD256(  gCorps.P,x )
         fin
         
         Trace( "Temps (ms) : " + ChronoFin())
         gbModeBench= faux
         //y_2 = gCorps.puissanceModulo( x, gCorps.PMoins2 )
         Trace(inverseDex.VersChaineHexa())
         y_2 = gCorps.multiplicationModulo(x, inverseDex)
         dbgAssertion(y_2.estEgalA1(), y_2.VersChaineHexa())
         //trace(y_2.VersChaineHexa())
        type : 18
      -
        type : 161
        enabled : false
  -
    name : HGCD_257
    identifier : 0x2bff93840167baf0
    internal_properties : BQAAAAUAAAC9wbdCEZdpIGC7divGH8pLtDy2WhfjSZbdhQFHmRvD+ql+eiLGhNZwnBgAfRB8RALgJwSLgEw0T5JFTVmubyw75M95JkKRfBmSzBd88FhlIZzOrtQWlxkXGeD4QFgBuIjWx7N0tgeZmngVNJIAwSgCiXgC5C4T36jEwHcIUI+5FCVyAgyvb3dd1QTlxbuGD5aSxyhjInH0ElSXpOodKlt55Fy3EAYNDp48NZMSc2Ti3SKIODX7WMei2IJct62afj36N4YnI3Gvf1LoUqShytXOyy8C1MAmfYlYsmSiUbTXDykS35vXRM8gCEVe5SuAKnkXJuDXWOlOXYE8eN5Oqaw/r/mQT54Ead+TU9xD5espohQSRdWmKCgp75PxpzI5yMOjDmn5KMBgrJmxe4SFWJyn3y0+SQSABP1Vk1RAwC2HiRxB8N66GUBW6Q6YK/ykEglw3sY22zUYbUiwYSJLNrtpTgfPDDDW6eOj3bir6UkkgJXaEsiMRP+nrJL9EkrZ++M98jathjrjyVIOkWh1R/Mk0e/P/TeJDaQapRS9g0KEZqsQlIWda7ne4xIGzcJPI7jtQITBGaKb8cZxntR9fU4YZ62J8U4yk68ACuUOsJDmTB44cPWcVIpw2wk+CLwEYPDm3cv8yJDjIRfNMea8M6GR1jGW6UczBp1xFGObBVnfu1a1ga4bbCbNV2BlUIRZW+1/TEqLPfoLB4ohE3yUr5Ymfy4BRqkB+G5LhF94
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         
         //nA est Entier256("0xE541541323354631A131320231222369")
         //nA est Entier256("0x131320E541541323354631A231222369")
         //nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF")
         gCorps est CorpsModulaire( "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F" )
         
         //x est Entier256("0") 
         x est Entier256("6ab25deff4b35b971c0a059add76a64ce") 
         //x est Entier256("6ab25deff4b35b971c0a059add76a64ce20724128d0ea92bdc008249e599c257") 
         //x est Entier256("dd76a64ce20724128d0ea92bdc0082496ab25deff4b35b971c0a059ae599c257") 
         //x est Entier256("dd76a64ce20724128d0ea92bdc0082496ab25deff4b35b971c0a059ae599c257") 
         //x est Entier256("6a78370c5d3d16db557cce0771741d05db2ded89c11be6b8e266ddd32a484c9f") 
         //x est Entier256("26b402aee6aac2e00a2aea5c88ac024ec9b3e786d646caac3932580eaf8ce81c") 
         inverseDex est Entier256
         
         
         //nA est Entier256("0x354631A131320231222369")
         //nB est Entier256("0xFFFFFFFFFFFFFFFFFFFFFF")
         buf est un Buffer = x.versbuffer()
         //r64 , M1, N1, M0, N0, nbTour  sont des entiers sur 8 sans signe
         //(r64, M1, N1, M0, N0, nbTour ) =
         
         	
         	Trace(x.VersChaineHexa())
         	inverseDex = inverseModulaire_HGCD256( gCorps.p, x  )
         	SI  inverseDex.estEgalAZero() ALORS
         		trace("* non géré *")
         		retour
         	FIN
         	// cas ou l'on obtient P-X au lieu de X
         	//si Estimpair(inverseDex.val0 * x.val0 ) ALORS
         	si  gCorps.multiplicationModulo( x, inverseDex ).val0 <> 1 alors
         		//trace("**INV***")
         //		inverseDex = negation(inverseDex)
         		inverseDex = gCorps.négationModulo( inverseDex ) // soustraction( inverseDex, gCorps.P )
         //		inverseDex = additionAvecUn(inverseDex)
         	FIN
         	
         	xy est un entier256 = gCorps.multiplicationModulo( x, inverseDex )
         
         
         
         trace(inverseDex.VersChaineHexa())
         trace(xy.VersChaineHexa())
         
         
         
         	
        type : 18
      -
        type : 161
        enabled : false
 menu :
  name : _Menu
  identifier : 0x292573e513b5f221
  internal_properties : BQAAAAUAAABd4biPtdLQOwfUFiqrit8H4xfGqKyz9t6VLxCUnNZRQiLPVs82PZNE+UVdKRzjizyeuKyRur85gNMUfqplpmtNDnQWQla9zo+GH9+1EfUJ6w17Dn/egD/gv+Hhywk8c9unIdzEp7EHgaAqD28w7Agveg4u19PBcKGZtQ==
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : BQAAAAUAAABqPQh6HC8RxAVkp2SqPYLuZrfVhd+1KX4lx22hIT8uqEpE6yP7Sbc2rmVqdmL816EWzXOkEe9ijOtYwchZKAfpy3B1cNqhpJgsnbUs
  controls :
   -
     name : Case1
     identifier : 0x2bff9674018f33a5
     internal_properties : BQAAAAUAAAAgid82V5+Nmifs96PFxAFv+5dgU5a/rjDiohyyCSLWXAKcb2isHHXnTVhO+4Ss7ygo9eVskvYKT9mCyOTm9eaxThEskERdyQg=
     code_elements :
      type_code : 62
      p_codes :
       -
         type : 15
         enabled : false
       -
         type : 16
         enabled : false
       -
         type : 39
         enabled : false
       -
         type : 17
         enabled : false
 code_elements :
  type_code : 1
  p_codes :
   -
     code : |1+
      PROCEDURE MaFenêtre()
   -
     code : |1+
      
      
     type : 34
   -
     code : |1+
      
      
     type : 2
   -
     code : |1+
      
      
     type : 40
   -
     code : |1+
      
      
     type : 234
   -
     code : |1+
      
      
     type : 165
   -
     code : |1+
      
      
     type : 177
   -
     code : |1+
      
      
     type : 180
   -
     type : 230
     enabled : false
  procedures :
   -
     name : PGCD_Ex
     procedure_id : 1994850594937384653
     type_code : 14
     code : |1+
      
      PROCEDURE PGCD_Ex( nA entier, nB entier, u entier,u_ entier)
      
      r,  v   sont des entiers
      r_, v_ sont des entiers
      //reste est un entier
      quotient est entier 
      
      // init
      r  = nA 
      r_ = nB
      //u  = 1
      v  = 0
      //u_ = 0
      v_ = 1
      TableSupprimeTout(Table1)
      //TableAjouteLigne(Table1,r,r_,u,u_, 0)
      i est un entier
      tantque r_ <> 0
          quotient =  r / r_
          
          // sauver les valeur précédentes
          rTemp,uPrec,vPrec sont des entiers
          rTemp = r;
          uPrec = u;
          vPrec = v;
          
          r =r_
          u =u_
          v =v_ 
          
          // calcul du reste
      	r_ 	 =  rTemp- r_*quotient
      	dbgAssertion(r_>=0)
       	u_Avant est entier = u_
       	v_Avant est entier = v_
      	u_ = uPrec + quotient * u_
      	v_ = vPrec - quotient * v_
      	//trace( complete(u_+"",4," ") + " = " + Complète(uTemp+"",4," ") + "- " + quotient + " * " + u_Avant )
      	TableAjouteLigne(Table1,r,r_,u,u_, v, quotient)
      	i++
      fin
      
      si EstimPair(i) // u<0 ALORS
      	renvoyer  nB -u 
      FIN
      
      renvoyer u
     type : 458752
   -
     name : PGCD_Ex2
     procedure_id : 1994952634755953455
     type_code : 14
     code : |1+
      
      PROCEDURE PGCD_Ex2( nA entier, nB entier, u entier,u_ entier)
      
      r,  v   sont des entiers
      r_, v_ sont des entiers
      //reste est un entier
      quotient est entier 
      
      TabQ est un tableau d'entier sur 8 sans signe
      
      // init
      r  = nA 
      r_ = nB
      //u  = 1
      v  = 0
      //u_ = 0
      v_ = 1
      TableSupprimeTout(Table1)
      //TableAjouteLigne(Table1,r,r_,u,u_, 0)
      i est un entier
      tantque r_ <> 0
          quotient =  r / r_
          TableauAjoute(TabQ, quotient)
          
          // sauver les valeur précédentes
          rTemp,uPrec,vPrec sont des entiers
          rTemp = r;
          uPrec = u;
          vPrec = v;
          
          r =r_
          u =u_
          v =v_ 
          
          // calcul du reste
      	r_ 	 =  rTemp- r_*quotient
      	dbgAssertion(r_>=0)
       	u_Avant est entier = u_
       	v_Avant est entier = v_
      	u_ = uPrec + quotient * u_
      //	v_ = vPrec - quotient * v_
      	v_ = vPrec + quotient * v_
      	//trace( complete(u_+"",4," ") + " = " + Complète(uTemp+"",4," ") + "- " + quotient + " * " + u_Avant )
      	TableAjouteLigne(Table1,rTemp,r,u,u_,v, quotient)
      	i++
      fin
      
      
      X_N2  est un entier = _AppliqueCoefQ_EulideEtenduInitial( TabQ )
      dbgAssertion(X_N2 = u)
      
      
      si EstimPair(i) // u<0 ALORS
      	renvoyer  nB -u 
      FIN
      
      renvoyer u
     type : 458752
   -
     name : _AppliqueCoefQ_EulideEtendu
     procedure_id : 1994959352085647769
     type_code : 14
     code : |1+
      PROCEDURE _AppliqueCoefQ_EulideEtendu( TabQ est un tableau d'entiers, u Entier, uPlus1 entier)
      
      
      X_N0  est un entier =  u
      X_N1  est un entier =  uPlus1
      X_N2  est un entier 
      
      // tours suppl.
      POUR i = 1 _À_ TabQ..Occurrence-1
      	X_N2 = X_N0 + TabQ[i] * X_N1
      	// tour suivant
      	X_N0 = 	X_N1 
      	X_N1 = 	X_N2
      FIN
      
      renvoyer X_N2
      
      
     type : 458752
   -
     name : _AppliqueCoefQ_EulideEtenduInitial
     procedure_id : 1994960309863446439
     type_code : 14
     code : |1-
      // calcule le résultat de la suite de coefs de l'algorithme d'euclide étendu :
      // X[N]  = X[N-2] + Q[N] * X[N-1]
      PROCEDURE _AppliqueCoefQ_EulideEtenduInitial( TabQ est un tableau d'entiers sur 8 sans signe) : Entier
      
      // si le tableau est vide
      nNbQ est un entier = TabQ..Occurrence
      SI nNbQ = 0 ALORS
      	renvoyer 0
      FIN
      SI nNbQ = 1 ALORS
      	renvoyer 1
      FIN
      
      X_N0  est un entier // = 0
      X_N1  est un entier // = 1
      X_N2  est un entier 
      
      
      // tours 1 
      // NB : TabQ[1] est inutile...
      X_N2 =  1  // X_N0+ TabQ[i] * X_N1
      // vers tour 2 (suivant)
      //X_N0 = 	0 // X_N1 
      X_N1 = 	1 // X_N2
      
      
      // tour 2
      X_N2 =  TabQ[2] // * X_N1
      // tour suivant
      X_N0 = 	X_N1 
      X_N1 = 	X_N2
      
      // tours suppl.
      POUR i = 3 _À_ TabQ..Occurrence-1
      	X_N2 = X_N0 + TabQ[i] * X_N1
      	// tour suivant
      	X_N0 = 	X_N1 
      	X_N1 = 	X_N2
      FIN
      
      
      renvoyer X_N2
     type : 458752
   -
     name : PGCD_I8VersTaQ
     procedure_id : 1994962693570391842
     type_code : 14
     code : |1+
      
      PROCEDURE PGCD_I8VersTaQ( nA entier sur 8 sans signe, nB entier sur 8 sans signe, tabQ est un tableau d'entier sur 8 sans signe)
      
      rTemp , r, r_  sont des entiers sur 8 sans signe
      //reste est un entier
      quotient est entier sur 8 sans signe
      //TableauSupprimeTout(tabQ)
      // init
      r  = nA 
      r_ = nB
      
      tantque r_ <> 0
          quotient =  r / r_
          TableauAjoute(tabQ, quotient)
              
          // sauver les valeur précédentes
          rTemp = r;
          r =r_
       
          
          // calcul du reste
      	r_ 	 =  rTemp- r_*quotient
      	dbgAssertion(r_>=0)
      fin
      
     type : 458752
   -
     name : _CalcResteSelonCoefEtCorrigeTabQ_LOCAL
     procedure_id : 1994967843236265493
     type_code : 14
     code : |1-
      // TabQ: IN/OUT
      PROCEDURE _CalcResteSelonCoefEtCorrigeTabQ_LOCAL( nA entier256, nB entier256,  TabQ est un tableau d'entiers sur 8 sans signe, iDébut entier, local nNumMot est entier)
      
      rTemp , r, r_  sont des entier256
      //reste est un entier
      quotient est entier sur 8 sans signe
      
      // init
      r  = nA 
      r_ = nB
      
      	procédure interne _CorrigeTabQ( iFrom entier, TabQ_INOUT est un tableau d'entiers sur 8 sans signe  )
      		POUR i = iFrom  _a_ 10000 // TabQ_INOUT..Occurrence
      			// calcul quotient exact
      			quotient256 est Entier256
      			reste256    est Entier256
      			( quotient256, reste256) = divisionEuclidienne256( r , r_ )
      			SI i <=  TabQ_INOUT..Occurrence ALORS
      				//TRace( ChaîneConstruit("COrrection (%1/%4) %2=>%3 (%5:%6)",i,  TabQ_INOUT[i], quotient256.val0, TabQ_INOUT..Occurrence, r.val0, r_.val0 ))
      				TabQ_INOUT[i] = quotient256.val0
      			sinon
      				// si on avait pas assez de coef
      				TableauAjoute(TabQ_INOUT, quotient256.val0 )
      				//Trace( ChaîneConstruit("Ajout (%1) %2",i,  TabQ_INOUT[i] ))
      			fin
      			dbgAssertion(quotient256.val1 = 0)
      			dbgAssertion(quotient256.val2 = 0)
      			dbgAssertion(quotient256.val3 = 0)
      	
      			// sauver les valeur précédentes
      			rTemp = r;
      			r =r_
      			dbgAssertion(i<1000)
      			
      			// calcul du reste
      			r_ 	 =  reste256 //rTemp- r*quotient
      			si r._64Bits(nNumMot) = 0 ALORS
      				// si on avait top de coef.
      				tantque i < TabQ_INOUT..Occurrence 
      					TableauSupprime(TabQ_INOUT,TabQ_INOUT..Occurrence)// le dernier
      				FIN
      				RENVOYER (r_, r)
      			FIN
      	
      		FIN
      	FIN
      
      
      i est entier
      pour i = iDébut  _a_ TabQ..Occurrence
      	quotient =  TabQ[i]
      
      	// sauver les valeur précédentes
      	rTemp = r;
      	r =r_
      		
      	// calcul du reste
      	qr 	est Entier256 = multiplication256x64_256( r, quotient)
      	r_ 	 =  soustraction( rTemp, qr )
      	// l'eval par poids fort n'est pas correcte
      	//si r <0 _ou_  r_ > r ALORS
      	si qr.estSupérieurStrictA(rTemp) _ou_  r_.estSupérieurStrictA( r ) ALORS
      		// marche arrière de 1
      		r_ = r
      		r  = rTemp
      		RENVOYER _CorrigeTabQ(i, TabQ )
      	FIN
      FIN
      // si l'accumulation des opérations n'a pas suffit
      si  r._64Bits(nNumMot) <> 0 ALORS
      	RENVOYER _CorrigeTabQ(i, TabQ )
      FIN
      
      renvoyer (r_, r)
     type : 458752
   -
     name : inverseMouloParPartie_LOCAL
     procedure_id : 1994968543315966498
     type_code : 14
     code : |1+
      // renvoie l'inverse modualire de nA mod Nb avec calcul par parties
      PROCEDURE inverseMouloParPartie_LOCAL( nA entier256 , nB entier256 )
      
      // coef du PCDG
      TabQ est un tableau d'entier sur 8 sans signe
      
      // calcul de tous les coef. nécessaire pour calcul du PGCD sans <TabQ>
      _CalculeCoefQ_EulideEtendu( nA, nB, TabQ)
      
      //@A voir compression
      nCompress est entier = 0
      pour i=TabQ..Occurrence-1 a 1 pas -1
      	si TabQ[i]=1 ALORS
      //		nCompress++
      //		TabQ[i+1] = TabQ[i+1] + 1
      //		TableauSupprime(TabQ,i)
      	FIN
      	
      	
      FIN
      
      // DUMP
      //TableSupprimeTout(Table1)
      //pour i = 1 _a_ TabQ..Occurrence
      //	TableAjouteLigne(Table1,0,0,0,0, TabQ[i])
      //fin
      
      // résultat : calcul du dernier élément de la suite X[N]  = X[N-2] + Q[N] * X[N-1]
      u est un entier256 = _AppliqueCoefQ_EulideEtendu256(TabQ)
      
      // selon le signe prévu du ceof :
      SI EstImpair(TabQ..Occurrence + nCompress) // u<0 ALORS
      	RENVOYER  soustraction( nB, u )
      FIN
      renvoyer u
      
     type : 458752
   -
     name : PGCD_VersTaQParPartie_LOCAL
     procedure_id : 1994977283581756977
     type_code : 14
     code : |1+
      
      // <nNumMot> : indice du mot de poids fort. 3 = Max, 0 = poids faible, taille de mots = 64 bits
      // tabQ : IN/OUT
      PROCEDURE PGCD_VersTaQParPartie_LOCAL( nA Entier256 , nB Entier256 ,  tabQ est un tableau d'entiers sur 8 sans signe, nNumMot est entier = 3 ) 
      
      
      //si nLogBase.estSupérieurStrictA(nA) _ou_ nLogBase.estSupérieurStrictA(nB) ALORS
      si nNumMot=0 alors
      	/// fin de récursion  : calcul avec des entier "petits"
      	PGCD_I8VersTaQ(nA.val0,nB.val0, tabQ)
      	retour
      FIN
      
      nA_PoidsFort,nB_PoidsFort sont entier sur 8 sans signe
      nA_PoidsFort = nA._64Bits(nNumMot)
      nB_PoidsFort = nB._64Bits(nNumMot)
      
      // PGCD avec juste les poids forts restant
      iStart est un entier = tabQ..Occurrence  + 1
      PGCD_I8VersTaQ(nA_PoidsFort,nB_PoidsFort,tabQ)
      
      // calcul les reste avec ces coefs.
      // tabQ : IN/OU
      r, r_ sont entier256
      (r, r_ ) = _CalcResteSelonCoefEtCorrigeTabQ_LOCAL(nA, nB, tabQ, iStart, nNumMot )
      // on devrait avoir des nombre plus petit maintenant
      dbgAssertion( r._64Bits(nNumMot) =0)
      dbgAssertion( r_._64Bits(nNumMot) =0)
      
      // suite , récursif
      PGCD_VersTaQParPartie_LOCAL(r_,r, tabQ,  nNumMot-1)
     type : 458752
   -
     name : Right_Shift
     procedure_id : 2006348308246394737
     type_code : 14
     code : |1+
      PROCEDURE Right_Shift( a_  entier sur 8, P entier sur 8 )
      
      soit u = P
      soit v = a_
      r est un entier sur 8 = 0
      s est un entier sur 8 = 1
      k est un entier sur 8 = 0
      
      x est un entier sur 8
      
      tantque (v > 0)
      	si ( EstPair(u) ) alors
      		si  ( estpair(r) ) alors
      			 u = u/2
      			 r = r/2
      			 k = k + 1
      		sinon
      			 u = u/2
      			 r = (r + P)/2
      			 k = k + 1
      		fin
      	sinon si ( estpair(v)) alors
      		si ( estpair(s)) alors
      			v = v/2
      			s = s/2
      			k = k + 1
      		sinon
      			v = v/2
      			s = (s + P)/2
      			k = k + 1
      		fin
      	sinon
      	 	x = (u - v)
      	 	si  (x > 0) alors
      			u = x
      		 	r = r - s
      	 	 	si (r < 0) alors
      			 	r = r + P
      			 fin
      		sinon
      			v =  -x
      			s = s - r
      			si  (s < 0) alors
      				s = s + P
      			fin
      		fin
      	fin
      fin // tantquee
      
      SI (r>P) ALORS
      	r = r - P
      FIN
      si (r < 0) alors
      	 r = r + P
      fin
      renvoyer r // and k
      
      
      
      
     type : 458752
   -
     name : Right_Shift256
     procedure_id : 2006355240323782142
     type_code : 14
     code : |1+
      PROCEDURE Right_Shift256( a_ est entier256, P est entier256) 
      
      soit u = P
      soit v = a_
      r est entier256// 0 
      s est entier256 ( 1 )
      bRetenue est un booléen
      //k est entier256// = 0
      //nbTour est un entier
      
      	procédure interne __moyenne( N1 entier256, N2 entier256)
      		//SI nbTour>120 ALORS
      		//	stop
      		//FIN
      //		soit X1 = N1
      //		soit X2 = N2
      //		X1.divisePar2()
      //		X2.divisePar2()
      //		res est Entier256 = addition(X1,X2)
      //		si EstImpair( N1.val0)  _et_ EstImpair( N2.val0) ALORS
      //			res = additionAvecUn(res)
      //		FIN
      //		RENVOYER res
      		//bRetenue est un booléen
      		res2 est Entier256 = addition(N1,N2,bRetenue)
      		res2.divisePar2()
      		si bRetenue alors
      			res2.val3 = res2.val3 | 0x8000000000000000; // remet le bit de poids fort
      		fin
      //		dbgAssertion(res2.estEgalA(res), res2.VersChaineHexa() + RC + res.VersChaineHexa() )
      //		
      		renvoyer res2
      		
      	FIN
      
      //x est un entier256
      
      //tantque pas  v.estEgalAZero()
      boucle	
      	//nbTour++
      	
      	//si (  estPair(u.val0) ) alors
      	si u.val0 & 1 = 0 alors
      		//si  ( EstPair(r.val0) ) alors
      		si  (r.val0 & 1) = 0 alors
      			 u.divisePar2()// = u/2
      			 r.divisePar2() // = r/2
      		sinon
      			 u.divisePar2()// = u/2
      			 //r = _moyenne(r,P) // (r + p)/2,
      			 r= addition(r,P,bRetenue)
      			 r.divisePar2()
      			 SI bRetenue ALORS
      				r.val3 = r.val3 | 0x8000000000000000; // remet le bit de poids fort
      			 FIN 
      		fin
      	//sinon si ( estpair(v.val0)) alors
      	sinon si v.val0 & 1 = 0 alors
      		//si ( estpair(s.val0)) alors
      		si s.val0 & 1 = 0 alors
      			v.divisePar2() // v = v/2
      			s.divisePar2() // = s/2
      		sinon
      			v.divisePar2()// = v/2
      			s= addition(s,P,bRetenue)
      			s.divisePar2()
      			SI bRetenue ALORS
      				s.val3 = s.val3 | 0x8000000000000000; // remet le bit de poids fort
      			FIN
      		fin
      		si v.estEgalAZero() ALORS
      			sortir
      		FIN
      	sinon
      	 	si  u.estSupérieurStrictA(v) alors
      			u = soustraction(u , v)  // u-v
      		 	
      	 	 	si r.estSupérieurOuEgalA(s)  alors
      	 	 		r = soustraction(r, s) // r - s)
      	 	 	sinon
      			 	r = addition(    r, soustraction(P, s))
      			 fin
      		sinon
      			v = soustraction(v , u)  //v =  -x
      			si  s.estSupérieurOuEgalA(r) alors
      				s = soustraction(s, r)
      			sinon
      				s = addition(s, soustraction(P, r))
      			fin
      		fin
      		SI v.estEgalAZero() ALORS
      			SORTIR
      		FIN		
      	fin
      	
      fin // tant que
      
      SI r.estSupérieurStrictA(P) ALORS
      	r = soustraction(r , P)
      FIN
      //si (r < 0) alors
      //	 r = r + P
      //fin
      renvoyer r // and k
      
      
      
      
     type : 458752
   -
     name : Right_Shift2561
     procedure_id : 2006734275482790210
     type_code : 14
     code : |1+
      PROCEDURE Right_Shift2561( a_ est entier256, P est entier256) 
      
      soit u = P
      soit v = a_
      r est entier256// 0 
      s est entier256 ( 1 )
      k est entier256// = 0
      
      //x est un entier sur 8
      
      tantque pas  v.estEgalAZero()
      	si (  estPair(u.val0) ) alors
      		si  ( EstPair(r.val0) ) alors
      			 u.divisePar2()// = u/2
      			 r.divisePar2() // = r/2
      			 k = additionAvecUn(k)
      		sinon
      			 u.divisePar2()// = u/2
      			 r = addition(r,P)
      			 r.divisePar2() // (r + p)/2,
      			 k = additionAvecUn(k) //k = k + 1
      		fin
      	sinon si ( estpair(v.val0)) alors
      		si ( estpair(s.val0)) alors
      			v.divisePar2() // v = v/2
      			s.divisePar2() // = s/2
      			k = additionAvecUn(k) // = k + 1)
      		sinon
      			v.divisePar2()// = v/2
      			s = addition(s,P)
      			s.divisePar2() //  (s + P)/2
      			k = additionAvecUn(k) // k = k + 1
      		fin
      sinon
      	   
      	 	//x = u - v
      	 	//si  ( x > 0) alors
      	 	si  u.estSupérieurStrictA(v) alors
      			u = soustraction(u , v)  // u-v
      		 	
      	 	 	si r.estSupérieurOuEgalA(s)  alors
      	 	 		r = soustraction(r, s) // r - s)
      	 	 	sinon
      	 	 		r = soustraction(addition(r,P), s)
      			 	//r = r + P
      			 fin
      		sinon
      			v = soustraction(v , u)  //v =  -x
      			//s = s - r
      			//si  (s < 0) alors
      			si  s.estSupérieurOuEgalA(r) alors
      				s = soustraction(s, r)
      			sinon
      				s = soustraction(addition(s,P), r)
      				//s = s + P
      			fin
      		fin
      	fin
      fin // tantquee
      
      SI r.estSupérieurStrictA(P) ALORS
      	r = soustraction(r , P)
      FIN
      //si (r < 0) alors
      //	 r = r + P
      //fin
      renvoyer r // and k
      
      
      
      
     type : 458752
   -
     name : inverserParXPK
     procedure_id : 2010565175885598382
     type_code : 14
     code : |1-
      PROCEDURE inverserParXPK(nombre entier256)
      
      Corps est CorpsMudulaire_sepc256k1
      res est Entier256
      
      _2 est Entier256(2)
      _1 est Entier256(1)
      inv_2 est Entier256 = Corps.inverseModulo(_2)
      x est un Entier256
      
      pour i = 255 a 0 par -1
      	
      	// inv(x*2^N) = inv(x) *  inv( 2^N ) 
      	res = Corps.multiplicationModulo(res,inv_2)
      	
      	si nombre.bit(i) alors
      		// inv(x+1) = inx(x) -  inv( x * (x+1) ) 
      
      		//calcul de x = 2^I
      //		x est un Entier256 = _2
      //		pour j=1 a i-1
      //			x.multipliePar2()
      //		fin
      		si res.estEgalAZero() ALORS
      			res = _1// Corps.inverseModulo( pow2 )
      			
      		sinon
      			//xTest est un Entier256 = Corps.inverseModulo( res )
      			//dbgAssertion(xTest.estEgalA(x))
      			// inv(x+1) = inx(x) * (1 - * inv(x+1) )
      			// inv(x+k) = inv(x) * inv ( 1 +  k*inv(x) ) 	 
      		
      			// calcul de inv( (x+1) ) 
      			//x_x1    est Entier256 = Corps.multiplicationModulo( x, additionAvecUn(x)  )
      			invXPlus1 est Entier256 = Corps.inverseModulo( additionAvecUn(x) )
      			_1_moins_invXPlus1 est Entier256 = Corps.soustractionModulo( _1, invXPlus1 )
      			//invx    est Entier256 = Corps.inverseModulo( pow2 )
      			
      			// inv(x+1) = inx(x) -  inv( x * (x+1) ) 
      			// inv(x+1) = inx(x) -  inv( x) * inv(x+1) 
      			res = Corps.multiplicationModulo( res, _1_moins_invXPlus1  )
      		fin
      		
      		
      		x = additionAvecUn(x)
      	FIN
      	
      
      	x.multipliePar2()
      	
      FIN
      
      trace(  Corps.multiplicationModulo( res, nombre  ).VersChaineHexa())
      
      renvoyer res
     type : 458752
   -
     name : inversModulo_SuiteDeDiviseurs
     procedure_id : 2010960944237288672
     type_code : 14
     code : |1-
      PROCEDURE inversModulo_SuiteDeDiviseurs(nombre est Entier256)
      
      Corps est CorpsMudulaire_sepc256k1
      Trace(  nombre.VersChaineHexa() )
      
      	Procédure interne _nMeilleurFacteur(  n entier sur 8  sans signe, pow2 est un entier  )
      		
      		_2_puissanceN est Entier256
      		_2_puissanceN.affecteAvecEntierPositif(1)
      		_2_puissanceN.multiplieParUnePuissanceDe2( pow2 )
      				
      				
      		n256 est un Entier256
      		n256.affecteAvecEntierPositif( (n) )
      		
      		n256.multiplieParUnePuissanceDe2( pow2 )
      		iMin est un entier256
      		iMin.affecteAvecEntierPositif(1)
      		zMin est entier sans signe sur 8 = n
      		pour i=2 a 255
      			///i256 est Entier256( i )
      			z est entier sans signe sur 8 = (n * i) & 0xFF
      			si zMin > z ALORS
      				zMin = z
      				iMin.affecteAvecEntierPositif(( i))
      			FIN
      		FIN
      		renvoyer iMin		
      
      	fin
      
      
      res est Entier256
      nombreRestant est Entier256 = nombre
      pour i = 31 a 1 pas -1
      	nBitMax est un entier = nombreRestant.log2()
      	partI est un entier sur 8  sans signe =  nombreRestant._64Bits_AligneSur1Bit(nBitMax)
      	//partI est un entier sur 8  sans signe = nombreRestant._8Bits(i)
      	si partI=0 ALORS
      		continuer
      	FIN
      	partI = bitDécaleDroite(partI , 64-8) & 0xFF
      	facteur est un entier256 = _nMeilleurFacteur( partI,8 )
      	
      	si res.estEgalAZero() ALORS
      		res = facteur
      	sinon
      		res = Corps.multiplicationModulo(res,facteur)
      	fin
      	
      	nombreRestant = Corps.multiplicationModulo(nombreRestant, res )
      	trace(  nombreRestant.VersChaineHexa() )
      FIN
      
      renvoyer res 
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BQAAAAUAAAAwjDLmDSZ0H1P68nJIeNfqR9EvRjU/K+sVcM1T6rhVNr+VTV1mZ/rmoweYbFDZUhBGcv8UsxlDxVCOnb2U/SQOvlGWzNby3/w/V+ppSymxv+Vh
  original_name : Modele1
resources :
 string_res :
  identifier : 0x1baf2192033652ca
  internal_properties : BQAAAAUAAAAa2Zm8J9E/zh+/WIrVvz1fER/So3PB0gjQuxc1xKQVWY4ZDm5lfg==
custom_note :
 internal_properties : BQAAAAUAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : BQAAAAUAAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
