#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : TEst_ECDA
 major_version : 25
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : TEst_ECDA
 identifier : 0x2b7cfedd00d3a562
 internal_properties : BQAAAAUAAACxHeUIxbZNvvEi196KSYVfgKITg89gyzCvyEIeuuHEH0c1FyBDd7UCXGpUHONBGjWYzNq138gyr2XMYBQH/jCbSb8o08CtbXdmFdbYRb9d39KxuXAGlophEQPGa5Ee/xqqzY08bFXeq50NsCK4yMQMDhpoDFep2crWxtTV4d62rxxmFD3XWU+I5ksQWjS1cWtQawRqmx0aU2tlT/TdULG5ECWCIcf4v99Wcgn13Gtgw1mtluYC42LmfFSwdzud/z7zHGgfKKQbuc2dx0fMr/moPNRj1GmUXDEXaya98fq7OBdOEV9jQPcLkrCnrYmvHbMkJFod5Nh+19tMyiW5e5SYQ6M4nuYk/4cOvrduQk6gFQ97udkAWTQdc9/foDhyGa77HOiRG7QOdvmKYdVi4tIqSlFrzYBIruf0j85FzXUtQwF2RRAEPqQvd+gdoaEquvJQ+uih7XX8s1JKU0yX641bM9eZnuo8fRjoxHWoJPZnZNzNS1Xzc+4gvGEDuuli/sharV8pTQ8yRqyFaHcGJ13zoQeItBRFQ1vDT3j93/uBa7vPELknYBa6FZwt7V4dJ0De25XgVuMBGkaQ0eAiyO6IDL95BVqBaSyTfdJ0yGSDkiw5HPLBH8aosMc2PsYG+/Pz9Pje3oK+2MWAoTJ+bLkLjnMzPnBEpS02nC+pCi6cdQlxevZXx+exobtWrFyE9sohTsytDmQLSydH/jM3SnN1a/Qwg5aWgvfAZXRE3mBFDrSO+naaRlr0C677WwUZUkAGlKWYwq3MCN5UlaeYIoqgRDIBA0857UXLe9loERkGmjTGWSA8d/RSidr6D4shQKIgwfBhQ4SYsj2Qa3Q=
 controls :
  -
    name : priv_pub
    identifier : 0x2b7cfee80119d106
    internal_properties : BQAAAAUAAAACkwGhIhsOpciDOfUQ7iOhZhnENjWOac+oJnxktQRGH2ipdOInJEJUxkGwz9dsQLAg6MqZL1LAOhbans6OgG1V+T3bfjlLpLSUllPYG7tZfpIl6GfbjsjGT4LkZ/+X3SJRcKq5oyYIfmLsQuE33A2AqvD09jVDATuO/UW7CL+kmMyFviSOStmpoLmjLb0EhFkc0KG4gSghRumzCFgFbqcJzKjppWZgowndHfmlNmv5QCtqfbGFjonnPgSD1dikHOHEzD9Cc7d/ATLEYiKxjwp3QO2WL5o70kkzb2sDWBvQDQUkQhtCbj6T7LuRJuR6Zu3xRfvoehmwCFQCeipJpP+hnwZM1sgTLlY36Ej3LN2O47X6+PKCScWQDHviGbnziKkZdhRcFjeiwMmsN1SMFIPCot10EGJ15lWqfGZij7vGnKPD32LRq1SYLdLEOOG83fpSr1PynunDwB7w8SdaCwZAWaxIZ67895kKWjTfkudgQDvn4dkaaffKwHzkl7qIJaX1Q2Hymsk39p5oSFV9noR7DPUpdxNIIxIAV81MNswnphKxKuHOjz2oKitjEoIqGCSicYRQPLIbILMhD+aRWpDr6dnkrhq2COu2b3qnxhemyRfe7kN3nfYYARt/HveWotSollwqK8jrYCqfuV/w2+gEU7y/nHvbQSIDcB+47mmGqolUl9SvYFAJSSRiDpP6RrCzh5dK0d9lSOOTWZbBoAp8OvCluQGDYdDhNARy42g3rRcDkbM270Q9w+ZgEJ7nf3YZcTIvBjiYVIRj+w==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         gbModeBench = vrai
         CrytoLib est ECDSA_BTC
         //ClePrivee est Entier256("75be5c76cde3bcb877a523f618c839cb6ac58269880288734acee9473a180744")
         ClePrivee est Entier256("8727b3b7be9139498f2f48f7b88f92203b1ce5ea527fd7dd754F650e2216b935")
         //CléPrivée est Entier256("2")
         
         Trace("Calcul...")
         ChronoDébut()
         ClePublique est Point256 = CrytoLib.DériveCléPubliqueDepuisCléPrivée(ClePrivee)
         Trace( "Temps (ms) : " + ChronoFin())
         Trace(ClePublique.x.VersChaineHexa())
         Trace(ClePublique.y.VersChaineHexa())
         
         // 5b0ec43c0ea2bb19964c367e44bfba69b3ec528a3c15a4122bb90ff42bcef87b
         xOK est Entier256("0x5b0ec43c0ea2bb19964c367e44bfba69b3ec528a3c15a4122bb90ff42bcef87b")
         //xOK est Entier256("0xFD0F6EBE95AAFBED3C431047BB3D9DEA4324B8D6CDBC16D35AE30AC22E9548")
         yOK est Entier256("0xb809f2a2d4c6423c2f946ff6499dffec78385fd75f97245910c358a4a55cfdb6")
         
         
         
         dbgAssertion(ClePublique.x.estEgalA( xOK) )
         dbgAssertion(ClePublique.y.estEgalA( yOK) )
         // b809f2a2d4c6423c2f946ff6499dffec78385fd75f97245910c358a4a55cfdb6
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : FIn1
    identifier : 0x2b8390ec00c21e47
    internal_properties : BQAAAAUAAACHXxipdqWeapjUd8wkxG0qOhw1GybBfGx1VX2Cna4BSS3MRmGgCtUBc1zsGCYVQIXFlgz4vuKROfJvtvCqhg2ApHvitaGMjh93JI9ekLZkLJJ8u0CTWvduQBz5+YvUSGoG3ZstmVkiwvkMQlXkhWw0u7H15CoSrmchAkcC4FzlMoPSb0JkIftwg4ORCsfLgGiNfL17e/p83Uev9FomTMZhTXDfsyyCIveFO5Wqin+tEyhWDRQs0Ql8yz43B1QsICGrJg7W9zYT7PKdvq6f32DlgR/cGq7AD7lsqQ/Aa627G1y9QJglXe2Mv+17lA19hBtw4yP3UhW1QPQnNTQizUxVERmqNybhm0sd20hfcGcewGZC7lVRSD6wxRClPRYpw07JPWiWP9B9hk3FzAdT9+IIGoxVO9EEOxVQwTVT5LjX8Bk8aMkMAtHI5+E352zfHI7gjl7jG1r+MBjR4s4tjqn6hWmhMAtlag++Fwtk80SR51kSkAhNHGAG2knpkB/DJOuxsihdiYrCdrAlkQoOu/WFPF6OuorxBnD8NmH8u7sq7Ul3bClae009+YHDmmYUo69pDtobnoMdo70h++vZsjzzVGRGXvXmCnTu3+ivmuEOoCbC/Dvp6FBnVWmBSMUT2bC2bKcJNqPRgFpqGLPhY97J4wJppgENIjzhrZFB2nBJePJpWCNBJueyUdDwJU5FQLdp/KKasC3jdIxuEY71V3SsDeB8
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         ferme()
        type : 18
      -
        type : 161
        enabled : false
  -
    name : ECDSA_SigneNombre
    identifier : 0x2b9198d600a6d698
    internal_properties : BQAAAAUAAAAmkdClpOTWbyAgF/8py5vvBvk20qPinW/oqV7pAsTtbc/Q7TYRWJe3z+VNAUi2ktpZfg+TWYwufxly8FmIWywm837KL1i4ScM6zRmZk18BsGeiajAGOUSrlje8IRzIs3+I9xuzWBEZDAL9Jp6VpOb9BoMQoxTyn4mi6DHXm6qGPq34jE98zn9XF2Bmuav4HsrhYq1+zZz6uNqFCyuY+XNvUPz3g66EHM6UrCgXQ6hBq6n/OBIZzz6/ZPOlv3De4wX+5LHPYAsQxKjIXmChX0SkaAaQ+D0xXM7IHbecxS9LtImhYn7afeRRaqXWUsiBTHFy0efhBe6xhrhZwohl0IJG5ADkqehHz10CU+ln8Kgu5rxr0V1/zyQ5sB69AdJpc/5JsSqyEzKT3NP70stXx6LISrwFqWe4L6ks7cv9Tixb+lsyRuv+HO+2CTupUZaL+Oq87i6R2ZhwcoZPAPDPRnFKXXGrOONzPJH4OSvES3Dt5vdwZgLH9Dje0nHXhhUbnOGXqDLjh5AUyOo1i6Imh6EpmNo4AjIVKhR06miLBFxLl8vgy4Dx4r78eG7GNcFRZ/jwSccvWuyU/EdgYgwI0Z/VCXNVdBjNk1PQUqgX01sTFfvyHWVWhAxXj14oheJpDAcLGv3Cbx4R/qUbwwvEgf9rvqSvah00j1wrh7OJrwrbdrZiED2Xz8FffmDh9HbfnlHzicOrbggX30MFez4t2GswTF2eSjnK1pdOPf+uTDB+CyPJBQ==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         CrytoLib est ECDSA_BTC
         ClePrivee est Entier256("8727b3b7be9139498f2f48f7b88f92203b1ce5ea527fd7dd754F650e2216b935")
         N est Entier256("12345678")
         
         Trace("Calcul...")
         ChronoDébut()
         signature est SignatureEcdsa
         signature= CrytoLib.SigneNombre( N, ClePrivee)
         Trace( "Temps (ms) : " + ChronoFin())
         trace("Signature : ")
         Trace(signature.R.VersChaineHexa())
         Trace(signature.S.VersChaineHexa())
         retour
         
         CléPublique est Point256 = CrytoLib.DériveCléPubliqueDepuisCléPrivée( ClePrivee )
         sERR est chaine
         bOK est un booléen =  CrytoLib.VerifieSignature( N, CléPublique, signature, sERR )
         trace("Vérif signature :" )
         Trace(bOK)
         Trace(sERR)
         
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Image1
    identifier : 0x2e10ace804c9b359
    internal_properties : BQAAAAUAAABakyojFl9Ls1wbnzPwBmnXTlX3XNCqeZ89eiTYdT07v3PTp3usGEoOx6UmIZHrz8nCeipvuXoLfXAmQwDvu8iRc55yAjCBrU+AAxVUnvj6GgdXVMEChaadGrAq01cNUhKMaUY17AugwbnbgN46uzSAmENYIyr2B4/2Mkd9Fa5QolFWpcHY5O8hbWZHOGsB9a00CBVD36wh5vgz0+3x/OlJr4EBRok8rhhQbU9/hhJEzeYfmzIoKVfeU11qZTg/E49Tyfexn5uUeP4GlhZuP2/3TdVFIjrpmMzYcu+IMgTcaPRSVIHupId5EPq90K3TzobfzH5/3TndxiKjci/JO7kLkHrFPlKS+fKZzVBIr9H7uIwWQbNHpmn/P5gaNiBY9E3lCz6a4+nhwpBHQ1Ka/zBdPebFB2u0uVMAA6tt4c9xnycxaUeJzD4j1hZMysAn7Mis+M+wK1o+f3x834kG5xnuqc6OycuhtzvSZl1qgcr7sDloqB7biTjiuK5IFnPc671rokyDUhCmB9JE2MLLAgpxA3T30ZbofA15XcY28vJXuFj9BxIlKbiuOxc0bGiMmMwwAbW4hp+aX9ZgZcOIdqHdPmXLPE50KwYEakfYK/B9sFwaaHz8gX373Rch8SRSfGgwvUPwYrhAMTU68h3pCNDsAtCuWLEoTKE2w/Uw6BKegLWOuaJO9IxrmL7CBTdtFcvgaQyRAOHU39lGEv6BEV9bnbl1boD/pm0IdBBRbl8YFelETMKRqqS1UoaAlwvlMNkgSHWy+0TLmr1vXFuj4pQcXJJ0J3+ijqURzRYkgPoRsFF/FFlB2Ru5FQVVnR+nHi1UjfJix7uOEzqAam+U2KgPtXW5
    type : 8
    code_elements :
     type_code : 8
     p_codes : []
  -
    name : ECDSA_SigneNombre_ECDSA_VérifieSignature
    identifier : 0x2c02cf800181802d
    internal_properties : BQAAAAUAAAAlYFtd4lp0h5wG1OP60mBjcV1M5wAaluq4Y9aYhmKWibI45faDbtszsWgWIX0BFVGWuJHI6gAtjN+Pk06m0wH9RaWxgrDZy2XtlbHm7zLfytpJQCCGSeoOnrJLLL6Nr+qSb2frRJy1u0C6ajPLHQ153Om+t8Qqsj8S8CuiVRqS5PSaHFFqOInx4huQEhrvIJGP9NYuvkP83WPnK5KUlhxQJAuMrqNzkiDV+/Dx0+xpfY98xcahN/Xreqi12rL/SkQ9+RtyipHiK4IPXI/4VzIXMLWb/pLIDsHv2U2r8etJedfBZRhwLq3PdTgAspH2cyj78Kj4y+tTQhO/1Rx8KcOUdsQ+24+9bMmoxZInAW6WhsphvBOH2YU9jQPii7B8OGqSKYAL8ESM0oh5vWIdUC4zsceK0A9ZjZ0JAGl3sEjhNfCO9jCoI+uDabT2x5yPI2mzaGhjZ4dsw53NAhrPK39d5F0w0R8tXEVfwXOQZIgRl/SJYX17oXhWJ2TfguZtbHP1vkIcKHhp3Lt+RVI5VzstQLlrCMh6+gaTuAeiiqoo2vF3X27IY/WDGksGuRJ4Vgitm8xTry5ABBRsVb9I5G9GfJby1yKiySE7RKGy6bjDLmZVrFbUX9LdMpInVmTENMhmOTI7f/FvPGqZUkjIK1lXPHxnbAVXujfZs+uMgR1/1H5KHcEcMsbEq4RFFrrvsrY+oVEOLvYdXXXIRCPtNQKs0q+bzU9gm4BRvJrZ7TyYbel/8+kbXfdkxCUaiKLFR5FCf6OezLUrXgBnmcI=
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         CrytoLib est ECDSA_BTC
         ClePrivee est Entier256("8727b3b7be9139498f2f48f7b88f92203b1ce5ea527fd7dd754F650e2216b935")
         N est Entier256("12345678")
         //CléPrivée est Entier256("3")
         
         Trace("Calcul...")
         ChronoDébut()
         signature est SignatureEcdsa
         signature = CrytoLib.SigneNombre( N, ClePrivee)
         Trace( "Temps (ms) : " + ChronoFin())
         trace("Signature : ")
         Trace(signature.R.VersChaineHexa())
         Trace(signature.S.VersChaineHexa())
         
         CléPublique est Point256 = CrytoLib.DériveCléPubliqueDepuisCléPrivée( ClePrivee )
         Trace("Clé publique : ")
         Trace(CléPublique.x.VersChaineHexa())
         Trace(CléPublique.y.VersChaineHexa())
         
         sERR est chaine
         ChronoDébut()
         bOK est un booléen =  CrytoLib.VerifieSignature( N, CléPublique, signature, sERR )
         Trace( "Temps (ms) : " + ChronoFin())
         trace("Vérif signature :" )
         Trace(bOK)
         Trace(sERR)
         
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : ECDSA_VérifieSignature
    identifier : 0x2e1b496d009cf43f
    internal_properties : BQAAAAUAAAAS7xe3D9+dAT5vSNQgOjJ71fvc6npsUqSs1PjHNnL/YPhLhvD6hmAC49+Arpx84B61VzC1euP6lORJCwHLcuEUI+hsxJlkUsr74+cCm9Z5hbU/7INo+DsHEao+xAzcpCx+3oxCTo09tNgaunMhYcIb/p/t0LEXxEX/Hit7fK5+RLS+TuU8rs0DPnYQwaquVrrjMnnzpTAJqK617YxLF2DcWxn2TnztYyO3ouv0aCVuCYqs7m4vfbbx2UBbwY7E9nhb5+6lLEj/K8UNCn18R1UCHSwmL2LtI2sqUb6EqZJ1bQMjphO29J7+Bxh/Irsp4To77b2o9rVG66X2tIA0WviiOqbHqDmTYr7dADIbk6C4OYlyazgtNC/Z+3RKSYlFcxNKcVyGYzLXdXIxXmMDjQhFA2aJSfviOSStexVTiKalnZpcXptSIM+T+O01j7jVOnXvGuotaVoCge9xALYpUnkliDnDMtEdFrRpJQ1mCW6jRUZoYCQN7kINB+dLFA83vG4omMZnb6LusbW7ZVJirf9gU8p6QFwHFI3fRDybm3mwDZMFmH1q24FsBjN5Bq4eLPjuyjzRcP0g0QkW1DxOyWv3KmeF95tKOmtMALu6wRABRlHMH9xJMIu8O7u3mr3K8e1bj7Vg+dqM8MglG1NZTagYe9VJpl3pMbr7q+tgrf7VWFqt0/C91J2c7XDHNMm+rWqseHSGLpL/5D9whG0D/mMnRZMt+NCt/1/kAoChQd+g8Vizzed48QIs6hUR
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         
         
         // signature
         signature est SignatureEcdsa
         signature.R.affecteAvecChaineHexa("381d97bbc2cfbe448bf256bdb5ff9cd6fdbe27726ee4d603a4f92fa541fa7518")
         signature.S.affecteAvecChaineHexa("040e51ef10775569752ce8258dd5c382e1a39ae6530ba1044a58bed5f8ca9d55")
         // clé pub
         CléPublique est Point256 //= CrytoLib.DériveCléPubliqueDepuisCléPrivée( ClePrivee )
         CléPublique.x.affecteAvecChaineHexa("5b0ec43c0ea2bb19964c367e44bfba69b3ec528a3c15a4122bb90ff42bcef87b")
         CléPublique.y.affecteAvecChaineHexa("b809f2a2d4c6423c2f946ff6499dffec78385fd75f97245910c358a4a55cfdb6")
         
         // valeur signée
         N est Entier256("12345678")
         
         sERR est chaine
         Trace("Calcul...")
         ChronoDébut()
         bOK est un booléen =  VerifieSignature( n, CléPublique, signature )
         Trace( "Temps (ms) : " + ChronoFin())
         trace("Vérif signature :" )
         si bOK ALORS
         	trace("OK")
         	retour
         FIN
         Trace("***************** FAILED ****************")
         Trace(bOK)
         Trace(sERR)
         
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Bench_ECDSA_VérifieSignature
    identifier : 0x2e41069e011dea6e
    internal_properties : BQAAAAUAAADSKM4jWJ/9P0yh9iBOpHVgOfnm95vtuJHiXCQG5VbeAGO5UqwikvcGVrP5g0iaF/ZzUdDzxOqcxtrGypuMUTsUZY2Hs/NM50hTof8BPfKKGYRizGl9dg29Xobe2atuYo2BjY4Yl89DAGmQ5Tp0Q52ZOJdHrc8Bt1MrRPrarL+NlEHtss87/fTzlXaOfdMRejmFlNcjWJ0TnoZfOfbyNmRePSOB8UD62Gz4OxQncFbXxnfiQRSHmD8Xqxolfnc4M5lhnp54a4RnmEEdz0bJk50fPf57b88MC1PwsVImWaKGY3f9oigwjt4LTdPZbKQC2ISId1kQm0QBf0IVmgpmS+8shNIiLVfxjjm8vhYEyMizZ1eU8/KTrZ/J7X5aTcHVij7EiEsIiiRFbBxMa/UcEacqBu8cK6LWFXWrLqB7F7a0etmbZaXnjNO87hL4V8VJYbKCJTnxSs5+tpGe61aIQDCSB7CGRhDp+rH9dvCO/D7qSmE3lYz+0t5eDeAUloQvXz8b2eUVFqqG4NdAmtZNL9xPbMV9Bunv/EDLVc1TeAvPYlIQrYPNcwnXNAi6qA0iQ3VFe1fZLwqz22SuViPQ2juDug/DIPEXXa+ZxIXZMw2jmB8EhZvftbbK5BVPKdO1YmfhDDRvK8VtYcb6vswqW4udDuxPfe1lCJpOYMcHN2wh9kE2RvLKhWR8NPLTDvrmhG6/j6vmIQMXoYOmlif/U/dzGISQSNkCPilf8ystAb114VeuoxGTuX7iYan1bCHmmTPnIw==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         
         
         // signature
         signature est SignatureEcdsa
         signature.R.affecteAvecChaineHexa("381d97bbc2cfbe448bf256bdb5ff9cd6fdbe27726ee4d603a4f92fa541fa7518")
         signature.S.affecteAvecChaineHexa("040e51ef10775569752ce8258dd5c382e1a39ae6530ba1044a58bed5f8ca9d55")
         // clé pub
         CléPublique est Point256 //= CrytoLib.DériveCléPubliqueDepuisCléPrivée( ClePrivee )
         CléPublique.x.affecteAvecChaineHexa("5b0ec43c0ea2bb19964c367e44bfba69b3ec528a3c15a4122bb90ff42bcef87b")
         CléPublique.y.affecteAvecChaineHexa("b809f2a2d4c6423c2f946ff6499dffec78385fd75f97245910c358a4a55cfdb6")
         
         // valeur signée
         N est Entier256("12345678")
         // 1 test a blanc
         bOK est un booléen =  VerifieSignature( N, CléPublique, signature )
         SI pas bOK ALORS
         	Trace("***************** FAILED ****************")
         	RETOUR
         FIN
         	
         //sERR est chaine
         Trace("Calcul...")
         ChronoDébut()
         pour i = 1 a 1000
         	bOK  =  VerifieSignature( N, CléPublique, signature )
         fin
         nTempMs est un entier = ChronoFin()
         Trace( "Temps pour 1000 (ms) : " + nTempMs )
         Trace( "Temps/appel     (ms) : " + (nTempMs /1000.0) )
         
         
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Compile_formule_Double_Jacobi
    identifier : 0x2e464ed4009f76b4
    internal_properties : BQAAAAUAAACpcLFEP4Y46uEbVoCuisKUQOEs683MsV64ZzoIadLIO3DowowSuWoiy+8E5UoKFkkCNe49QDHY+kSaMYhPAu7jPiBoa23oLsSNadPAk+S8T6UHAbTtQiesaT2OG+MR4DAQl/QrjOC0FlWAV0Mtq5qNjDibBmt0stEK4SdH4HaEmxKSYbnBu4IRjhSpjdutDASbJAHHdfAjLHCy1ZVJRTDxn3dexkRduwvfehP0YJ1uAZKM7r6/NUYhCYAbmd5E7ph7/zb91LhHo7310q0kHxU6VWyWL5KFQ1u60Z7MqfJdreMrLste5HbW3/BHIoPRAdJzzY145p3WW8VGtFiE2kDSOr6/QPEzytZ1SJr7uzjIkdGyq0jNbC85CzS6IYlhV6dGTVhC//5rkab9qj83eVxJf1L1hfee7eBB95H/fKLZYSZoWsd+3IM/vDmheyxBTqm7dkZJdUYmnYNtbKKtzo2p1KVPTr0J2nDdoYniDWqnOVLkzKCJGqZ5qyMXYMOTEJKUlDKDC64SzdmXsQ6meaMU/wYW/Fjj2ElTsn7cNsApm/1mf+KVkMan+dg+OQW2DTVkSKRVZUdJZicouAl7WDp2aXlgaha+MBueI45JsAG8s3GWHMez24CgiWR2Zf4CxPsdCkguWRbtFPfYxGgH1CLaqRUfcolF9YHIsgnJKdRtUWdVHS7bRiuA0fhcMJmq0SNrZ1Vnd9pbMEvBrwM65clDZzesgjT44HYOF6nwoQ5CTjzeir6fVgq+L6qm
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         CPL est un compilateurDeFormule
         courbe est CourbeElliptique_secp256k1
         corps est un CorpsModulaire_pointSepc256k1 dynamique <-courbe.corps_point_secp256k1
         
         
         //addrB est un entier système = &_B
         
         //CPL.déclareParamètre("X" )
         //CPL.déclareParamètre("Y" )
         //CPL.déclareParamètre("Z" )
         CPL.déclareOpérateurBinaire("*", corps.addrprocMult256x256Modulo  )
         CPL.déclareOpérateurBinaire(".", corps.addrprocMult256x64Modulo,  compilateurDeFormule.UI8  ) // 64bits x 258 bits
         CPL.déclareOpérateurBinaire("-", corps.addrprocSoustractionModulo )
         _pf est un entier système
         //The "dbl-1998-cmo-2" doubling formulas
         sCodePoint_Doubling_Jacobi est chaine = [
         double(X,Y,Z)
         	XX	  = X*X
         	YY	  = Y*Y
         	ZZ    = Z*Z
         	XYY   = X*YY
         	S	  = 4.XYY
         	2S	  = 2.S
         	M	  = 3.XX 
         	MM    = M*M
         	X     = MM-2S
         	S_X   = S-X
         	YYYY  = YY*YY
         	8YYYY = 8.YYYY
         	MS_X  = M*S_X
         	YZ	  = Y*Z	
         	Y 	  = MS_X-8YYYY
         	Z	  = 2.YZ
         ]
         
         _pf = CPL.compileFormule(sCodePoint_Doubling_Jacobi)
         si _pf =0 ALORS
         	trace("*** ERREUR ***")
         	trace(ErreurInfo())
         	retour
         FIN
         trace(_pf)
         _X	est Entier256(311)
         _Y	est Entier256(747)
         _Z	est Entier256(1)
         P est Point256_3D
         P.x = _X
         P.Y = _Y
         P.z = _Z
         P2 est Point256_3D = courbe.pointDouble_Jacobi(P)
         Trace("X:"+P2.x.VersChaineHexa() )
         Trace("Y:"+P2.y.VersChaineHexa() )
         Trace("Z:"+P2.z.VersChaineHexa() )
         trace("GO : ---------------------------------")
         //_Resultat	est Entier256
         API( _pf, &_X, &_Y,&_Z) // (3*3)-3 => 6
         trace("X:"+_X.VersChaineHexa() )
         trace("Y:"+_Y.VersChaineHexa() )
         trace("Z:"+_Z.VersChaineHexa() )
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : Compile_formule_addition_Jacobi
    identifier : 0x2e478d210126d408
    internal_properties : BQAAAAUAAAAhHtOVPbpI4FO02VfcvFdjTFC5Osz21YCJZSAc9q/rZQDG9xGjc9yBUWjEcm2n0JvsQrWYXROpVYmfKfYtsog1hg7kqXsiIGk6TjWoLYM47G+2GqU+RlpQROSxduVATCOed/oHBwsDIYIBqlsaTsnYijaJbyc3hh0BSALrqOTGzPGYtM7tfEf1VGDaLZRfAvc/lrGV+h8NgCSxB7BcYCZsnr1USxwk6fbuJYgH0tBn3oOQ5cDVdsm1C6wtTmE6L6VReCpMfUa9hhnfi5K/UVlzJTgDh4E+gaWIs1LOU6xq/9sDutCOHPiV4RERrEYUAPSgudHoMZJTZa4DTr7EUVe8TETKVTGzfCOUuGK0Wrrv0+eeNzZFn+XfXVhWgRfj0saoVbopaUUkFeNpruqPbs4LrcQrnDEHhCIG999ELr8j2xQ0qHI6se5pZadjLOjmwAOlFoSmdZPpC9xPAgd/eXMvGqGRSyPmDbb0Y/vDv3s9dzBUXDVNg42XTKX/68cMhtiavuSWnSP9Waphue9EWCN4D26Qc3xkZ9FydPbLXiWrhSsa52nbrZ+drpLUVkMMWT+/jenRi1n8pk0EbtQGFqjOvuvXse0XjIbyu7QP/fHTbLy5rfHgApLDSu497YXpxQB07Lj7661Gl7qUmcLYSgKe7dKgzkofWtdpExL6S0fNQjFINvKkmw6eQNhTlvw0rA5rXV+yX5Ult2PgWtslDTvHzFLEBB+EXNsvNdd5L0/tkQs41+jrKK9VlJy44V6lVR/UEA==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         CPL est un compilateurDeFormule
         courbe est CourbeElliptique_secp256k1
         corps est un CorpsModulaire_pointSepc256k1 dynamique <-courbe.corps_point_secp256k1
         
         
         //addrB est un entier système = &_B
         
         //CPL.déclareParamètre("X1" )
         //CPL.déclareParamètre("Y1" )
         //CPL.déclareParamètre("Z1" )
         //CPL.déclareParamètre("X2" )
         //CPL.déclareParamètre("Y2" )
         //CPL.déclareParamètre("Z2" )
         CPL.déclareOpérateurBinaire("*", corps.addrprocMult256x256Modulo  )
         CPL.déclareOpérateurBinaire(".", corps.addrprocMult256x64Modulo,  compilateurDeFormule.UI8  ) // 64bits x 258 bits
         CPL.déclareOpérateurBinaire("-", corps.addrprocSoustractionModulo )
         //CPL.déclareOpérateurBinaire("+", corps.addrprocSoustractionModulo )
         _pf est un entier système
         //The "dbl-1998-cmo-2" doubling formulas
         sCodePoint_Doubling_Jacobi est chaine = [
         F(X1,Y1,Z1, X2,Y2,Z2)<§cs:2§>
         	Z1Z1  = Z1*Z1<§cs:2§>
         	Z2Z2  = Z2*Z2<§cs:2§>
         	U1    = X1*Z2Z2<§cs:2§>
         	U2    = X2*Z1Z1<§cs:2§>
         //S1 = Y1*Z2*Z2Z2	<§cs:2§>
         	Y1Z2  = Y1*Z2<§cs:2§>
         	S1	  = Y1Z2*Z2Z2<§cs:2§>
         //S2 = Y2*Z1*Z1Z1	<§cs:2§>
         	Y2Z1  = Y2*Z1<§cs:2§>
         	S2	  = Y2Z1*Z1Z1<§cs:2§>
         	H	  = U2-U1<§cs:2§>
         	HH    = H*H<§cs:2§>
         	HHH   = HH*H<§cs:2§>
         	r	  = S2-S1<§cs:2§>
         	V	  = U1*HH<§cs:2§>
         // X' = r^2-HHH-2*V<§cs:2§>
         	rr    = r*r<§cs:2§>
         	2V    = 2.V<§cs:2§>
         	temp  = rr-HHH<§cs:2§>
         	X1    = temp-2V<§cs:2§>
         //	Y' = r*(V-X')-S1*HHH<§cs:2§>
         	V_X   = V-X1<§cs:2§>
         	rV_X  = r*V_X<§cs:2§>
         	S1HHH = S1*HHH<§cs:2§>
         	Y1    = rV_X-S1HHH<§cs:2§>
         //  Z' = Z1*Z2*H<§cs:2§>
         	Z1Z2  = Z1*Z2<§cs:2§>
         	Z1    = Z1Z2*H<§cs:2§>
         ]
         
         _pf = CPL.compileFormule(sCodePoint_Doubling_Jacobi)
         si _pf =0 ALORS
         	trace("*** ERREUR ***")
         	trace(ErreurInfo())
         	retour
         FIN
         trace(_pf)
         
         P1 est Point256_3D
         P2 est Point256_3D
         P3 est Point256_3D
         P1.x.affecteAvecEntierPositif(23)
         P1.y.affecteAvecEntierPositif(7)
         P1.z.affecteAvecEntierPositif(14)
         
         P2.x.affecteAvecEntierPositif(5585)
         P2.y.affecteAvecEntierPositif(222)
         P2.z.affecteAvecEntierPositif(59)
         P3 = courbe.pointPlusPoint_Jacobi(P1,P2)
         Trace("X:"+P3.x.VersChaineHexa() )
         Trace("Y:"+P3.y.VersChaineHexa() )
         Trace("Z:"+P3.z.VersChaineHexa() )
         /// TEST 
         trace("GO : ---------------------------------")
         //_Resultat	est Entier256
         API( _pf, &P1.x, &P1.y, &P1.z,  &P2.x, &P2.y, &P2.z  ) // (3*3)-3 => 6
         Trace("X:"+P1.x.VersChaineHexa() )
         Trace("Y:"+P1.y.VersChaineHexa() )
         Trace("Z:"+P1.z.VersChaineHexa() )
         
         
        type : 18
      -
        type : 161
        enabled : false
 menu :
  name : _Menu
  identifier : 0x292573e513b5f221
  internal_properties : BQAAAAUAAABd4biPtdLQOwfUFiqrit8H4xfGqKyz9t6VLxCUnNZRQiLPVs82PZNE+UVdKRzjizyeuKyRur85gNMUfqplpmtNDnQWQla9zo+GH9+1EfUJ6w17Dn/egD/gv+Hhywk8c9unIdzEp7EHgaAqD28w7Agveg4u19PBcKGZtQ==
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : BQAAAAUAAABqPQh6HC8RxAVkp2SqPYLuZrfVhd+1KX4lx22hIT8uqEpE6yP7Sbc2rmVqdmL816EWzXOkEe9ijOtYwchZKAfpy3B1cNqhpJgsnbUs
 code_elements :
  internal_properties : BQAAAAUAAABWIHrh1Yb2YcVvIfiiRDSu3aXMOSCmrRDPwCP2jtbUBEGFOv+qg2ayVXoCZujUnWzZv/mop+WO+JtZ1Q==
  type_code : 1
  p_codes :
   -
     code : |1+
      PROCEDURE MaFenêtre()
   -
     code : |1+
      
      
     type : 34
   -
     code : |1+
      
      
     type : 2
   -
     code : |1+
      
      
     type : 40
   -
     code : |1+
      
      
     type : 234
   -
     code : |1+
      
      
     type : 165
   -
     code : |1+
      
      
     type : 177
   -
     code : |1+
      
      
     type : 180
   -
     type : 230
     enabled : false
  procedures :
   -
     name : PGCD_Ex
     procedure_id : 1994461367820771349
     type_code : 14
     code : |1+
      
      PROCEDURE PGCD_Ex( nA entier, nB entier)
      
      dbgAssertion(nB > nA )
      
      r, u, v   sont des entiers
      r_,u_,v_ sont des entiers
      //reste est un entier
      quotient est entier 
      
      // init
      r  = nA 
      r_ = nB
      u  = 1
      v  = 0
      u_ = 0
      v_ = 1
      
      tantque r_ <> 0
          quotient =  r / r_
          
          // sauver les valeur précédentes
          rTemp,uTemp,vTemp sont des entiers
          rTemp = r;
          uTemp = u;
          vTemp = v;
          
          r =r_
          u =u_
          v =v_ 
          
          // calcul du reste
      	r_ 	 =  rTemp- r_*quotient
      	dbgAssertion(r_>=0)
       	u_Avant est entier = u_
       	v_Avant est entier = v_
      	u_ = uTemp - quotient * u_
      	v_ = vTemp - quotient * v_
      	//trace( complete(u_+"",4," ") + " = " + Complète(uTemp+"",4," ") + "- " + quotient + " * " + u_Avant )
      	trace( complete(r_+"",4," ") + " = " + Complète(uTemp+"",4," ") + " + " + quotient + " * " + u_Avant )
      fin
      
     type : 458752
   -
     name : PGCD_ExR
     procedure_id : 1994470541871085041
     type_code : 14
     code : |1+
      // version résursive
      PROCEDURE PGCD_ExR( nA entier, nB entier, u=1, u_ =0 )
      
      //dbgAssertion(nB > nA )
      
      r   sont des entiers
      r_  sont des entiers
      //reste est un entier
      quotient est entier 
      
      // init
      r  = nA 
      r_ = nB
      
      
      si  r_ = 0 ALORS
      	renvoyer ( r, r_ ,  u, u_) 
      
      FIN
      
          quotient =  r / r_
          
          // sauver les valeur précédentes
          rTemp,uTemp sont des entiers
          rTemp = r;
          uTemp = u;
          r	  = r_
          u     = u_
          
          // calcul du reste
      	r_ 	 =  rTemp- r_*quotient
      	dbgAssertion(r_>=0)
       	uPourTrace est entier = u_
      	u_ = uTemp - quotient * u_
      	trace( complete(u_+"",4," ") + " = " + Complète(uTemp+"",4," ") + "- " + quotient + " * " +uPourTrace )
      	// récursion
      	( r, r_ ,  u, u_) = PGCD_ExR( r, r_,u,u_)
      	
      renvoyer  ( r, r_ ,  u, u_)
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BQAAAAUAAAAwjDLmDSZ0H1P68nJIeNfqR9EvRjU/K+sVcM1T6rhVNr+VTV1mZ/rmoweYbFDZUhBGcv8UsxlDxVCOnb2U/SQOvlGWzNby3/w/V+ppSymxv+Vh
  original_name : Modele1
resources :
 string_res :
  identifier : 0x1b7cfed701529005
  internal_properties : BQAAAAUAAAAa2Zm8J9E/zh+/WIrVvz1fER/So3PB0gjQuxc1xKQVWY4ZDm5lfg==
custom_note :
 internal_properties : BQAAAAUAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : BQAAAAUAAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
